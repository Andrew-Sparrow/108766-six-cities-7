{"version":3,"sources":["browser-history.js","services/api.js","const.js","utils/utils.js","store/actions.js","store/api-actions.js","components/card-info/card-info.jsx","components/room/room.jsx","components/room/room.prop.js","components/room-list/room-list.jsx","components/sign-in/sign-in.jsx","components/sign-out/sign-out.jsx","components/layout/layout.jsx","components/hocs/with-layout.jsx","hooks/use-map.jsx","components/map/map.jsx","components/tabs/tabs.jsx","components/sort-by/sort-by.jsx","components/main-empty/main-empty.jsx","components/main/main.jsx","components/favorite-place/favorite-place.jsx","components/favorite-city/favorite-city.jsx","components/favorite-list/favorite-list.jsx","components/favorites/favorites-empty.jsx","components/favorites/favorites.jsx","components/login/login.jsx","components/property/property-comment-submit-button.jsx","components/property/property-rating-star.jsx","components/property/property-comment-form.jsx","components/property/property-comment.jsx","components/property/property-comment-list.jsx","components/property/property-image.jsx","components/property/property-images-list.jsx","components/property/property-good.jsx","components/property/property-goods-list.jsx","mock/neighbourhood-places.js","components/property/property-near-place.jsx","components/property/property-near-places-list.jsx","components/loading-screen/loading-screen.jsx","components/property/property.jsx","components/error/error.jsx","components/private-route/private-route.jsx","components/app/app.jsx","store/reducer.js","index.js"],"names":["browserHistory","createBrowserHistory","BACKEND_URL","token","localStorage","getItem","AppRoute","cityList","AuthorizationStatus","LoginValue","APIRoute","SortByValues","Utils","offerFromServer","adaptedOfferForClient","Object","assign","host","avatarUrl","avatar_url","isPro","is_pro","isFavorite","is_favorite","isPremium","is_premium","maxAdults","max_adults","previewImage","preview_image","placesFromServer","map","place","adaptToClient","commentFromServer","adaptedCommentForClient","comment","date","id","rating","user","name","filmFromClient","places","favoritePlaces","Map","forEach","has","city","set","get","push","activeCity","filter","item","listLength","Array","fill","nanoid","Math","round","newPlace","adaptedPlaceForClient","this","newPlaces","index","findIndex","nearbyPlaces","commonPlaces","nearbyPlacesLinks","nearbyPlace","indexFromCommonPlaces","commonPlace","isCheckedAuth","authorizationStatus","formatDate","dateString","Date","toLocaleDateString","year","month","getSortedPlaces","sortTypeValue","clonedPlaces","slice","sort","firstPlace","secondPlace","price","hotels","_sortByPriceFromHighToLow","_sortByRating","ActionType","ActionCreator","isLoading","type","payload","isCommentSendedSuccessfully","isShowErrorMessage","errorMessageText","cityName","sortByValue","comments","status","login","addToFavorite","dispatch","_getState","api","post","then","info","data","catch","err","CardInfo","props","title","width","favoriteClickHandler","className","onClick","height","style","stroke","xlinkHref","to","Room","onListItemHover","getWidthByRating","history","useHistory","useDispatch","useSelector","state","onMouseEnter","evt","currentTarget","src","alt","preventDefault","PropTypes","shape","number","isRequired","string","arrayOf","bool","RoomList","SignIn","connect","onSignOutClick","trigger","placement","overlay","fontSize","loginValue","sortBy","children","withLayout","Component","displayName","useMap","mapRef","useState","setMap","useEffect","instance","leaflet","current","center","lat","location","latitude","lng","longitude","zoom","zoomControl","marker","tileLayer","attribution","addTo","undefined","panTo","activeCityName","points","selectedPoint","useRef","defaultCustomIcon","icon","iconUrl","iconSize","iconAnchor","currentCustomIcon","point","ref","onTabClick","data-city","dataset","onSortChange","isOpened","setIsOpened","action","method","prevValue","handleOpen","tabIndex","target","tagName","innerText","MainEmpty","withLayoutMain","setSelectedPoint","filteredPlaces","getFilteredPlaces","sortedPlaces","length","listItem","currentPoint","find","parseInt","FavoritePlace","FavoriteCity","FavoriteList","favoriteList","keys","FavoritesEmpty","getFavoritePlacesSeparatedByCity","size","onSubmit","authData","email","password","setItem","loginRef","passwordRef","display","xmlns","viewBox","fillRule","clipRule","d","value","placeholder","required","PropertyCommentSubmitButton","disabled","isSending","RatingCombination","5","4","3","2","1","PropertyRatingStar","serialNumber","isActive","defaultValue","defaultChecked","htmlFor","isCommentSending","isShowCommentErrorMessage","isCommentFormSendedSuccessfully","commentErrorMessage","idHotel","text","hotelRating","message","commentText","setCommentText","setRating","useParams","isSubmitButtonDisabled","generatedKeys","generateIdKeys","onSubmitHandler","border","onChange","idValue","reverse","textAlign","visible","animation","onChangeCommentHandler","onFocus","PropertyComment","avatarImgPath","dateTime","PropertyReviewList","slicedReviews","reviews","adaptCommentToClient","PropertyImage","imgPath","PropertyImagesList","images","generatedIds","imagePath","PropertyGood","good","PropertyGoodsList","goods","neighbourhoodPlaces","PropertyNearPlace","PropertyNearPlacesList","commonPlacesLinksGottenByNearbyPlaces","getNearbyPlacesFromCommonPlaces","LoadingScreen","withLayoutProperty","isCommentsLoaded","isNearbyPlacesLoaded","fetchCommentsList","adaptedPlacesToClient","adaptPlacesToClient","fetchNearbyPlacesList","description","onFavoriteClick","bedrooms","idPlace","isFavoritePlace","Error","render","path","exact","isDataLoaded","initialState","commentRating","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","Promise","resolve","reject","error","getAxiosInstance","store","createStore","getUpdatedPlaces","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","ReactDOM","StrictMode","document","getElementById"],"mappings":"yKAIeA,EAFQC,c,iBCAjBC,EAAc,2CAGdC,EAAK,UAAGC,aAAaC,QAAQ,gBAAxB,QAAoC,G,cCLlCC,EACL,IADKA,EAEJ,SAFIA,EAGA,aAHAA,EAIH,cAaGC,EAAW,CACtB,QACA,UACA,WACA,YACA,UACA,cAGWC,EACL,OADKA,EAEF,UAFEA,EAGF,UAGEC,EACG,eAGHC,EACH,UADGA,EAED,YAFCA,EAGD,YAHCA,EAIJ,SAIIC,EACF,UADEA,EAEQ,qBAFRA,EAGQ,qBAHRA,EAIM,kB,iDCvCbC,E,kGACJ,SAAqBC,GACnB,IAAMC,EAAwBC,OAAOC,OACnC,GACAH,EACA,CACEI,KAAMF,OAAOC,OACX,GACAH,EAAgBI,KAChB,CACEC,UAAWL,EAAgBI,KAAKE,WAChCC,MAAOP,EAAgBI,KAAKI,SAGhCC,WAAYT,EAAgBU,YAC5BC,UAAWX,EAAgBY,WAC3BC,UAAWb,EAAgBc,WAC3BC,aAAcf,EAAgBgB,gBAalC,cAROf,EAAsBG,KAAKE,kBAC3BL,EAAsBG,KAAKI,cAE3BP,EAAsBS,mBACtBT,EAAsBW,kBACtBX,EAAsBa,kBACtBb,EAAsBe,cAEtBf,I,iCAGT,SAA2BgB,GAAmB,IAAD,OAC3C,OAAOA,EAAiBC,KAAI,SAACC,GAAD,OAAW,EAAKC,cAAcD,Q,kCAG5D,SAA4BE,GAC1B,IAAMC,EAA0BpB,OAAOC,OACrC,GACAkB,EACA,CACEE,QAASF,EAAkBE,QAC3BC,KAAMH,EAAkBG,KACxBC,GAAIJ,EAAkBI,GACtBC,OAAQL,EAAkBK,OAC1BC,KAAMzB,OAAOC,OACX,GACAkB,EAAkBM,KAClB,CACEtB,UAAWgB,EAAkBM,KAAKrB,WAClCC,MAAOc,EAAkBM,KAAKnB,OAC9BiB,GAAIJ,EAAkBM,KAAKF,GAC3BG,KAAMP,EAAkBM,KAAKC,SAUrC,cAHON,EAAwBK,KAAKrB,kBAC7BgB,EAAwBK,KAAKnB,OAE7Bc,I,2BAGT,SAAqBO,GAMnB,OAL0B3B,OAAOC,OAC/B,GACA,M,8CAMJ,SAAwC2B,GACtC,IAAMC,EAAiB,IAAIC,IAa3B,OAXAF,EAAOG,SAAQ,SAACd,GACVA,EAAMV,aACJsB,EAAeG,IAAIf,EAAMgB,KAAKP,OAGhCG,EAAeK,IAAIjB,EAAMgB,KAAKP,KAAM,IAFpCG,EAAeM,IAAIlB,EAAMgB,KAAKP,MAAMU,KAAKnB,OAQxCY,I,+BAGT,SAAyBQ,EAAYT,GAGnC,OADiBA,EAAOU,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAKP,OAASW,O,4BAa9D,SAAsBG,GAGpB,OAFa,IAAIC,MAAMD,GAAYE,KAAK,IACX1B,KAAI,kBAAM2B,IAAO,S,8BAIhD,SAAwBnB,GAGtB,ODrHuB,ICmHDoB,KAAKC,MAAMrB,GDpHX,I,8BCgJxB,SAAwBD,EAAIK,EAAQkB,GAClC,IAAMC,EAAwBC,KAAK9B,cAAc4B,GAC3CG,EAAS,YAAOrB,GAChBsB,EAAQD,EAAUE,WAAU,SAAClC,GAAD,OAAWA,EAAMM,KAAOA,KAE1D,OADA0B,EAAUC,GAASH,EACZE,I,6CAGT,SAAuCG,EAAcC,GACnD,IAAMC,EAAoB,GAO1B,OALAF,EAAarB,SAAQ,SAACwB,GACpB,IAAMC,EAAwBH,EAAaF,WAAU,SAACM,GAAD,OAAiBA,EAAYlC,KAAOgC,EAAYhC,MACrG+B,EAAkBlB,KAAKiB,EAAaG,OAG/BF,M,KA9JLzD,EAkGG6D,cAAgB,SAACC,GAAD,OACrBA,IAAwBlE,GAnGtBI,EAqGG+D,WAAa,SAACC,GAGnB,OAAQ,IAAIC,KAAKD,GAAaE,mBAAmB,QAF5B,CAAEC,KAAM,UAAWC,MAAO,WAtG7CpE,EAuHGqE,gBAAkB,SAACC,EAAevC,GACvC,IAAMwC,EAAexC,EAAOyC,QAQ5B,OAAQF,GACN,KAAKvE,EACH,OAAOwE,EACT,KAAKxE,EACH,OAAiCgC,EAVgB0C,MAAK,SAACC,EAAYC,GAAb,OAA6BD,EAAWE,MAAQD,EAAYC,SAWpH,KAAK7E,EACH,OAV8B,SAAC8E,GAAD,OAAYA,EAAOJ,MAAK,SAACC,EAAYC,GAAb,OAA6BA,EAAYC,MAAQF,EAAWE,SAU3GE,CAA0B/C,GACnC,KAAKhC,EACH,OAVkB,SAAC8E,GAAD,OAAYA,EAAOJ,MAAK,SAACC,EAAYC,GAAb,OAA6BA,EAAYhD,OAAS+C,EAAW/C,UAUhGoD,CAAchD,GACvB,QACE,OAAOwC,IAwBAvE,Q,OC3KFgF,EACE,oBADFA,EAEK,gBAFLA,EAGE,oBAHFA,EAIS,0BAJTA,EAKW,4BALXA,EAMI,wBANJA,EAOM,0BAPNA,EAQkB,iCARlBA,EASG,mBATHA,EAUH,cAVGA,GAWM,mBAXNA,GAY4B,4CAZ5BA,GAaiB,sCAbjBA,GAgBgC,+CAGhCC,GACwB,SAACC,GAAD,MAAgB,CACjDC,KAAMH,GACNI,QAASF,IAHAD,GAK8B,SAACI,GAAD,MAAkC,CACzEF,KAAMH,GACNI,QAASC,IAPAJ,GASkB,SAACK,EAAoBC,GAArB,MAA2C,CACtEJ,KAAMH,GACNI,QAAS,CAACE,qBAAoBC,sBAXrBN,GAaC,SAACO,GAAD,MAAe,CACzBL,KAAMH,EACNI,QAASI,IAfAP,GAiBG,SAACQ,GAAD,MAAkB,CAC9BN,KAAMH,EACNI,QAASK,IAnBAR,GAqBC,SAAClD,GAAD,MAAa,CACvBoD,KAAMH,EACNI,QAASrD,IAvBAkD,GAyBO,SAAC1B,GAAD,MAAmB,CACnC4B,KAAMH,EACNI,QAAS7B,IA3BA0B,GA6BG,SAACS,GAAD,MAAe,CAC3BP,KAAMH,EACNI,QAASM,IA/BAT,GAiCgB,SAACU,GAAD,MAAa,CACtCR,KAAMH,EACNI,QAASO,IAnCAV,GAqCE,SAACW,GAAD,MAAY,CACvBT,KAAMH,EACNI,QAASQ,IAvCAX,GAyCK,SAACvD,EAAIuB,GAAL,MAAmB,CACjCkC,KAAMH,GACNI,QAAS,CAAC1D,KAAIuB,cA3CLgC,GA6CS,iBAAO,CACzBE,KAAMH,IA9CGC,GAgDK,iBAAO,CACrBE,KAAMH,IAjDGC,GAmDH,iBAAO,CACbE,KAAMH,ICzCGa,GAAgB,SAACnE,EAAIhB,GAAL,OAAoB,SAACoF,EAAUC,EAAWC,GAAtB,OAC/CA,EAAIC,KAAJ,UAAanG,EAAb,YAAoC4B,EAApC,YAA4ChB,EAAa,EAAI,IAC1DwF,MAAK,SAACC,GACLL,EAASb,GAA6BvD,EAAIyE,EAAKC,UAEhDC,OAAM,SAACC,S,QCqBGC,OAjDf,SAAmBC,GACjB,IACE9E,EAOE8E,EAPF9E,GACAkD,EAME4B,EANF5B,MACA6B,EAKED,EALFC,MACA/F,EAIE8F,EAJF9F,WACAyE,EAGEqB,EAHFrB,KACAuB,EAEEF,EAFFE,MACAC,EACEH,EADFG,qBAGF,OACE,uBAAKC,UAAU,mBAAf,UACE,uBAAKA,UAAU,4BAAf,UACE,uBAAKA,UAAU,oBAAf,UACE,qBAAGA,UAAU,0BAAb,mBAA+ChC,KAC/C,uBAAMgC,UAAU,yBAAhB,2BAEF,0BAAQA,UAAU,qCAAqCzB,KAAK,SAAS0B,QAASF,EAA9E,UACE,sBAAKC,UAAU,4BAA4BF,MAAM,KAAKI,OAAO,KAAKC,MAAO,CAAEC,OAAQtG,GAAc,UAAWmC,KAAMnC,GAAc,WAAhI,SACE,sBAAKuG,UAAU,qBAEjB,uBAAML,UAAU,kBAAhB,gCAGJ,sBAAKA,UAAU,4BAAf,SACE,uBAAKA,UAAU,kCAAf,UACE,uBAAMG,MAAO,CAAEL,MAAM,GAAD,OAAKA,EAAL,QACpB,uBAAME,UAAU,kBAAhB,yBAGJ,qBAAIA,UAAU,mBAAd,SACE,eAAC,IAAD,CAAMM,GAAE,kBAAaxF,GAArB,SAA4B+E,MAE9B,oBAAGG,UAAU,mBAAb,SAAiCzB,QC6DxBgC,OA/Ef,SAAcX,GACZ,IACE9E,EASE8E,EATF9E,GACAkD,EAQE4B,EARF5B,MACAwC,EAOEZ,EAPFY,gBACAX,EAMED,EANFC,MACA7F,EAKE4F,EALF5F,UACAF,EAIE8F,EAJF9F,WACAyE,EAGEqB,EAHFrB,KACAxD,EAEE6E,EAFF7E,OACAX,EACEwF,EADFxF,aAGI0F,EAAQ1G,EAAMqH,iBAAiB1F,GAE/B2F,EAAUC,cACVzB,EAAW0B,cAEX1D,EAAsB2D,aAAY,SAACC,GAAD,OAAWA,EAAM5D,uBAezD,OACE,2BACE8C,UAAU,gCACVe,aAhByB,SAACC,GAC5BR,EAAgBQ,EAAIC,gBAgBlBnG,GAAIA,EAHN,UAKGd,GACC,sBAAKgG,UAAU,mBAAf,SACE,8CAEJ,sBAAKA,UAAU,kDAAf,SACE,eAAC,IAAD,CAAMM,GAAE,kBAAaxF,GAArB,SACE,sBACEkF,UAAU,oBACVkB,IAAM9G,EACN0F,MAAM,MACNI,OAAO,MACPiB,IAAI,cAIV,eAAE,GAAF,CACErG,GAAIA,EACJkD,MAAOA,EACP6B,MAAOA,EACP/F,WAAYA,EACZyE,KAAMA,EACNuB,MAAQA,EACRC,qBArCuB,SAACiB,GAC5BA,EAAII,iBACAlE,IAAwBlE,EAC1B0H,EAAQ/E,KAAK7C,GAEboG,EAASD,GAAcnE,GAAKhB,W,mBClDnBuH,KAAUC,MAAM,CAC7B,GAAMD,KAAUE,OAAOC,WACvB,MAASH,KAAUE,OAAOC,WAC1B,SAAYH,KAAUE,OAAOC,WAC7B,KAAQH,KAAUC,MAAM,CACtB,SAAYD,KAAUC,MAAM,CAC1B,SAAYD,KAAUE,OAAOC,WAC7B,UAAaH,KAAUE,OAAOC,WAC9B,KAAQH,KAAUE,OAAOC,aACxBA,WACH,KAAQH,KAAUI,OAAOD,aACxBA,WACH,YAAeH,KAAUI,OAAOD,WAChC,MAASH,KAAUK,QAAQL,KAAUI,QAAQD,WAC7C,KAAQH,KAAUC,MAAM,CACtB,GAAMD,KAAUE,OAAOC,WACvB,UAAaH,KAAUI,OACvB,MAASJ,KAAUM,KACnB,KAAQN,KAAUI,OAAOD,aAE3B,OAAUH,KAAUK,QAAQL,KAAUI,QAAQD,WAC9C,WAAcH,KAAUM,KACxB,UAAaN,KAAUM,KACvB,SAAYN,KAAUC,MAAM,CAC1B,SAAYD,KAAUE,OAAOC,WAC7B,UAAaH,KAAUE,OAAOC,WAC9B,KAAQH,KAAUE,OAAOC,aAE3B,UAAaH,KAAUE,OACvB,aAAgBF,KAAUI,OAC1B,OAAUJ,KAAUE,OAAOC,WAC3B,MAASH,KAAUI,OAAOD,WAC1B,KAAQH,KAAUI,OAAOD,aCAZI,OA5Bf,SAAkBhC,GAChB,IAAQzE,EAA4ByE,EAA5BzE,OAAQqF,EAAoBZ,EAApBY,gBAEhB,OACE,sBAAKR,UAAU,iDAAf,SACG7E,EAAOZ,KAAI,SAACC,GAAD,OACV,eAAC,GAAD,CAEEM,GAAIN,EAAMM,GACVkD,MAAOxD,EAAMwD,MACbwC,gBAAiBA,EACjBX,MAAOrF,EAAMqF,MACb7F,UAAWQ,EAAMR,UACjBF,WAAYU,EAAMV,WAClByE,KAAM/D,EAAM+D,KACZxD,OAAQP,EAAMO,OACdX,aAAcI,EAAMJ,cATfI,EAAMM,U,QCKN+G,OAbf,SAAgBjC,GAEd,OACE,qBAAII,UAAU,wBAAd,SACE,gBAAC,IAAD,CAAMA,UAAU,6CAA6CM,GAAIxH,EAAjE,UACE,sBAAKkH,UAAU,gDAEf,uBAAMA,UAAU,gBAAhB,2B,SC+BR,IAYe8B,eAAQ,MAZI,SAAC5C,GAAD,MAAe,CACxC6C,eADwC,WAEtC7C,EAASb,UAUEyD,EA7Cf,SAAiBlC,GACf,IAAQZ,EAA0BY,EAA1BZ,MAAO+C,EAAmBnC,EAAnBmC,eAEf,OACE,gBAAC,WAAD,WACE,eAAC,KAAD,CACEC,QAAU,CAAC,SACXC,UAAU,SACVC,QAAU,sBAAK/B,MAAQ,CAAED,OAAQ,IAAKJ,MAAO,IAAKqC,SAAU,IAAlD,wCAHZ,SAKE,qBAAInC,UAAU,wBAAd,SACE,gBAAC,IAAD,CAAMA,UAAU,6CAA6CM,GAAKxH,EAAlE,UACE,sBAAKkH,UAAU,gDAEf,uBAAMA,UAAU,+BAAhB,SAAiDhB,WAIvD,qBAAIgB,UAAU,mBAAd,SACE,eAAC,IAAD,CACEA,UAAU,mBACVM,GAAIxH,EACJmH,QAAS,WACP8B,KAJJ,SAOE,uBAAM/B,UAAU,kBAAhB,gCCSV,IAee8B,gBAfS,SAAChB,GAAD,MAAY,CAClC9B,MAAO8B,EAAMsB,WACbjH,OAAQ2F,EAAM3F,OACdkH,OAAQvB,EAAMuB,OACdnF,oBAAqB4D,EAAM5D,uBAWW,KAAzB4E,EAhDf,SAAiBlC,GACf,IACE0C,EAIE1C,EAJF0C,SACAtD,EAGEY,EAHFZ,MACA9B,EAEE0C,EAFF1C,oBACA8C,EACEJ,EADFI,UAGF,OACE,uBAAKA,UAAWA,EAAhB,UACE,yBAAQA,UAAU,SAAlB,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAMA,UAAU,8CAA8CM,GAAG,IAAjE,SACE,sBAAKN,UAAU,eAAekB,IAAI,eAAeC,IAAI,gBAAgBrB,MAAM,KAAKI,OAAO,WAG3F,sBAAKF,UAAU,cAAf,SACE,qBAAIA,UAAU,mBAAd,SACG9C,IAAwBlE,EACrB,eAAC,GAAD,CAASgG,MAAOA,IAChB,eAAE,GAAF,eAMbsD,QCrCDC,GAAa,SAACC,EAAWxC,GAAZ,OACjB,SAAiBJ,GACf,OACE,eAAC,GAAD,CAAQI,UAAWA,EAAnB,SACE,eAACwC,EAAD,gBAAe5C,QAKvB2C,GAAWE,YAAc,aAEVF,U,0BC2BAG,OArCf,SAAgBC,EAAQ/G,GACtB,MAAuBgH,mBAAS,MAAhC,mBAAOrI,EAAP,KAAYsI,EAAZ,KAiCA,OA/BAC,qBAAU,WACR,GAAY,OAARvI,EAAc,CAEhB,IAAMwI,EAAWC,KAAQzI,IAAIoI,EAAOM,QAAS,CAC3CC,OAAQ,CACNC,IAAKvH,EAAWwH,SAASC,SACzBC,IAAK1H,EAAWwH,SAASG,WAE3BC,KZJY,GYKZC,aAAa,EACbC,QAAQ,IAGVV,KACGW,UACC,2EACA,CACEC,YAAa,sJAGhBC,MAAMd,GAETF,EAAOE,aAC0Be,IAAxBlI,EAAWwH,UACpB7I,EAAIwJ,MAAM,CACRZ,IAAKvH,EAAWwH,SAASC,SACzBC,IAAK1H,EAAWwH,SAASG,cAG5B,CAACZ,EAAQpI,EAAKqB,IAEVrB,GC0BMc,OAxDf,SAAauE,GACX,IACEoE,EAIEpE,EAJFoE,eACAxI,EAGEoE,EAHFpE,KACAyI,EAEErE,EAFFqE,OACAC,EACEtE,EADFsE,cAGIvB,EAASwB,iBAAO,MAChB5J,EAAMmI,GAAOC,EAAQnH,GAErB4I,EAAoBpB,KAAQqB,KAAK,CACrCC,QbP8B,caQ9BC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAGbC,EAAoBzB,KAAQqB,KAAK,CACrCC,QbX8B,qBaY9BC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAoBnB,OAjBA1B,qBAAU,WACJvI,GACF0J,EAAO3I,SAAQ,SAACoJ,GACd1B,KACGU,OAAO,CACNP,IAAKuB,EAAMtB,SAASC,SACpBC,IAAKoB,EAAMtB,SAASG,WACnB,CACDc,KAAOK,EAAM5J,KAAOoJ,EAAcpJ,GAC9B2J,EACAL,IAELP,MAAMtJ,QAGZ,CAACA,EAAKiB,EAAMyI,EAAQC,EAAeF,EAAgBS,EAAmBL,IAGvE,sBACEjE,MAAO,CAAED,OAAQ,QACjByE,IAAKhC,KCZX,IAiBeb,gBAjBS,SAAChB,GAAD,MAAY,CAClCkD,eAAgBlD,EAAMkD,mBAGG,SAAC9E,GAAD,MAAe,CACxC0F,WADwC,SAC7BhG,GACTM,EAASb,GAAyBO,IAClCM,EAASb,GAA2BlF,QAUzB2I,EA7Cf,SAAclC,GACZ,IAAQoE,EAA+BpE,EAA/BoE,eAAgBY,EAAehF,EAAfgF,WAExB,OACE,sBAAK5E,UAAU,OAAf,SACE,0BAASA,UAAU,sBAAnB,SACE,qBAAIA,UAAU,6BAAd,SACGjH,EAASwB,KAAI,SAACiB,GAAD,OACZ,qBAAIwE,UAAU,kBAAd,SACE,eAAC,IAAD,CACE6E,YAAWrJ,EACXwE,UAAS,0CAAsCxE,IAASwI,GAAkB,sBAC1E1D,GAAG,IACHL,QAAS,SAACe,GACRA,EAAII,iBACJwD,EAAW5D,EAAIC,cAAc6D,QAAQtJ,OANzC,SASE,gCAAOA,OAV0BA,eCiEjD,IAgBesG,gBAhBS,SAAChB,GAAD,MAAY,CAClCjC,YAAaiC,EAAMuB,WAGM,SAACnD,GAAD,MAAe,CACxC6F,aADwC,SAC3BlG,GACXK,EAASb,GAA2BQ,QAUzBiD,EA7Ff,SAAiBlC,GACf,IAAQf,EAA8Be,EAA9Bf,YAAakG,EAAiBnF,EAAjBmF,aACrB,EAAgCnC,oBAAS,GAAzC,mBAAOoC,EAAP,KAAiBC,EAAjB,KAOA,OACE,wBACEjF,UAAU,kBACVkF,OAAO,IACPC,OAAO,MACPlF,QAAS,SAACe,GAAD,OAVM,SAACA,GAClBA,EAAII,iBACJ6D,GAAY,SAACG,GAAD,OAAgBA,KAQRC,CAAWrE,IAJ/B,UAME,uBAAMhB,UAAU,0BAAhB,yBACA,wBAAMA,UAAU,uBAAuBsF,SAAS,IAAhD,UACIzG,EACF,sBAAKmB,UAAU,wBAAwBF,MAAM,IAAII,OAAO,IAAxD,SACE,sBAAKG,UAAU,4BAGnB,sBAAIL,UAAS,kDAA6CgF,GAAY,2BAAtE,UACE,qBACEhF,UAAS,yBAAqBnB,IAAgB1F,GAAwB,0BACtEmM,SAAS,IACTrF,QAAS,SAACe,GACRA,EAAII,iBACuB,OAAvBJ,EAAIuE,OAAOC,SACbT,EAAa/D,EAAIuE,OAAOE,YAN9B,SAUItM,IAEJ,qBACE6G,UAAS,yBAAqBnB,IAAgB1F,GAAkC,0BAChFmM,SAAS,IACTrF,QAAS,SAACe,GACRA,EAAII,iBACuB,OAAvBJ,EAAIuE,OAAOC,SACbT,EAAa/D,EAAIuE,OAAOE,YAN9B,SAUItM,IAEJ,qBACE6G,UAAS,yBAAqBnB,IAAgB1F,GAAkC,0BAChFmM,SAAS,IACTrF,QAAS,SAACe,GACRA,EAAII,iBACuB,OAAvBJ,EAAIuE,OAAOC,SACbT,EAAa/D,EAAIuE,OAAOE,YAN9B,SAUItM,IAEJ,qBACE6G,UAAS,yBAAqBnB,IAAgB1F,GAAgC,0BAC9EmM,SAAS,IACTrF,QAAS,SAACe,GACRA,EAAII,iBACuB,OAAvBJ,EAAIuE,OAAOC,SACbT,EAAa/D,EAAIuE,OAAOE,YAN9B,SAUItM,aCpDGuM,OAtBf,SAAmB9F,GACjB,IAAQoE,EAAmBpE,EAAnBoE,eAER,OACE,sBAAKhE,UAAU,SAAf,SACE,uBAAKA,UAAU,qEAAf,UACE,0BAASA,UAAU,oBAAnB,SACE,uBAAKA,UAAU,uCAAf,UACE,oBAAGA,UAAU,iBAAb,yCACA,qBAAGA,UAAU,6BAAb,uEAAqGgE,UAGzG,sBAAKhE,UAAU,gCC4CvB,IAYM2F,GAAiBpD,IA3DvB,SAAc3C,GACZ,IAAQzE,EAAmCyE,EAAnCzE,OAAQ6I,EAA2BpE,EAA3BoE,eAAgB3B,EAAWzC,EAAXyC,OAEhC,EAA0CO,mBAAS,IAAnD,mBAAOsB,EAAP,KAAsB0B,EAAtB,KAEMC,EAAiBzM,EAAM0M,kBAAkB9B,EAAgB7I,GACzD4K,EAAe3M,EAAMqE,gBAAgB4E,EAAQwD,GAOnD,OACE,wBAAM7F,UAAU,+BAAhB,UACE,qBAAIA,UAAU,kBAAd,oBACA,eAAC,GAAD,IAE0B,IAAxB+F,EAAaC,OACT,eAAE,GAAF,CAAYhC,eAAgBA,IAE5B,sBAAKhE,UAAU,SAAf,SACE,uBAAKA,UAAU,qCAAf,UACE,2BAASA,UAAU,wBAAnB,UACE,qBAAIA,UAAU,kBAAd,oBACA,qBAAGA,UAAU,gBAAb,UAA8B+F,EAAaC,OAA3C,sBAAsEhC,KACtE,eAAC,GAAD,IACA,eAAE,GAAF,CAAW7I,OAAQ4K,EAAcvF,gBAnBzB,SAACyF,GACvB,IAAMC,EAAeH,EAAaI,MAAK,SAAC3L,GAAD,OAAWA,EAAMM,KAAOsL,SAASH,EAASnL,GAAI,OACrF8K,EAAiBM,SAmBL,sBAAKlG,UAAU,wBAAf,SACE,0BAASA,UAAU,kBAAnB,SACE,eAAC,GAAD,CACEgE,eAAgBA,EAChBxI,KAA8B,IAAxBuK,EAAaC,QAAgBD,EAAa,GAAGvK,KACnDyI,OAAQ8B,EACR7B,cAAeA,mBA0BtBpC,gBAdS,SAAChB,GAAD,MAAY,CAClCkD,eAAgBlD,EAAMkD,eACtB7I,OAAQ2F,EAAM3F,OACdkH,OAAQvB,EAAMuB,UAWwB,KAAzBP,CAA+B6D,ICzB/BU,OA5Cf,SAAuBzG,GACrB,IAAQ5B,EAAuB4B,EAAvB5B,MAAO6B,EAAgBD,EAAhBC,MAAOtB,EAASqB,EAATrB,KAEtB,OACE,2BAASyB,UAAU,6BAAnB,UACE,sBAAKA,UAAU,qDAAf,SACE,eAAC,IAAD,CAAMM,GAAG,IAAT,SACE,sBAAKN,UAAU,oBAAoBkB,IAAI,6BAA6BpB,MAAO,IAAKI,OAAQ,IAAKiB,IAAI,cAGrG,uBAAKnB,UAAU,wCAAf,UACE,uBAAKA,UAAU,4BAAf,UACE,uBAAKA,UAAU,oBAAf,UACE,qBAAGA,UAAU,0BAAb,mBAAyChC,KACzC,uBAAMgC,UAAU,yBAAhB,2BAEF,0BAAQA,UAAU,yEAAyEzB,KAAK,SAAhG,UACE,sBAAKyB,UAAU,4BAA4BF,MAAO,GAAII,OAAQ,GAA9D,SACE,sBAAKG,UAAU,qBAEjB,uBAAML,UAAU,kBAAhB,gCAGJ,sBAAKA,UAAU,4BAAf,SACE,uBAAKA,UAAU,kCAAf,UACE,uBAAMG,MAAO,CAAEL,MAAO,UACtB,uBAAME,UAAU,kBAAhB,yBAGJ,qBAAIA,UAAU,mBAAd,SACE,eAAC,IAAD,CAAMM,GAAG,IAAT,SAAcT,MAEhB,oBAAGG,UAAU,mBAAb,SAAiCzB,WCT1B+H,OArBf,YAAiD,IAAzB9K,EAAwB,EAAxBA,KAAMJ,EAAkB,EAAlBA,eAC5B,OACE,sBAAI4E,UAAU,6BAAd,UACE,sBAAKA,UAAU,oDAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,eAAC,IAAD,CAAMA,UAAU,uBAAuBM,GAAG,IAA1C,SACE,gCAAO9E,UAIb,sBAAKwE,UAAU,oBAAf,SACG5E,EAAeb,KAAI,SAACC,GAAD,OAAW,eAAC,GAAD,CAAewD,MAAOxD,EAAMwD,MAAO6B,MAAOrF,EAAMqF,MAAOtB,KAAM/D,EAAM+D,MAAW/D,EAAMM,aCC5GyL,OAdf,SAAsB3G,GACpB,IAAQ4G,EAAiB5G,EAAjB4G,aAER,OACE,qBAAIxG,UAAU,kBAAd,SACG,YAAIwG,EAAaC,QAAQlM,KAAI,SAACiB,GAAD,OAAW,eAAC,GAAD,CAAcA,KAAMA,EAAMJ,eAAgBoL,EAAa9K,IAAIF,IAAYA,SCSvGkL,OAhBf,SAAwB9G,GACtB,OACE,uBAAMI,UAAU,+DAAhB,SACE,sBAAKA,UAAU,sCAAf,SACE,2BAASA,UAAU,6BAAnB,UACE,qBAAIA,UAAU,kBAAd,+BACA,uBAAKA,UAAU,4BAAf,UACE,oBAAGA,UAAU,oBAAb,gCACA,oBAAGA,UAAU,gCAAb,yFCkCGuC,WAhCf,SAAmB3C,GACjB,IAAQzE,EAAWyE,EAAXzE,OACFqL,EAAepN,EAAMuN,iCAAiCxL,GAE5D,OACE,gBAAC,WAAD,WAE0B,IAAtBqL,EAAaI,KACT,eAAC,GAAD,IAEF,uBAAM5G,UAAU,mCAAhB,SACE,sBAAKA,UAAU,sCAAf,SACE,2BAASA,UAAU,YAAnB,UACE,qBAAIA,UAAU,mBAAd,2BACA,eAAC,GAAD,CAAcwG,aAAcA,WAKtC,yBAAQxG,UAAU,mBAAlB,SACE,eAAC,IAAD,CAAMA,UAAU,oBAAoBM,GAAG,IAAvC,SACE,sBAAKN,UAAU,eAAekB,IAAI,eAAeC,IAAI,gBAAgBrB,MAAO,GAAII,OAAQ,cAW7D,8BCqErC,IAWe4B,gBAXS,SAAChB,GAAD,MAAY,CAClC5D,oBAAqB4D,EAAM5D,wBAGF,SAACgC,GAAD,MAAe,CACxC2H,SADwC,SAC/BC,GACP5H,EpBjFiB,SAAC,GAAD,IAAU6H,EAAV,EAAG/H,MAAcgI,EAAjB,EAAiBA,SAAjB,OAAgC,SAAC9H,EAAUC,EAAWC,GAAtB,OACnDA,EAAIC,KAAKnG,EAAgB,CAAE6N,QAAOC,aAC/B1H,MAAK,SAACC,GACL3G,aAAaqO,QAAQ,QAAS1H,EAAKC,KAAK7G,OACxCC,aAAaqO,QAAQ,QAAS1H,EAAKC,KAAKuH,OACxC7H,EAASb,GAA0BkB,EAAKC,KAAKuH,QAC7C7H,EAASb,GAAwCrF,OAElDyG,OAAM,SAACC,QoByECV,CAAM8H,QAKJhF,EAhHf,YAAoD,IAAlC+E,EAAiC,EAAjCA,SAAU3J,EAAuB,EAAvBA,oBACpBgK,EAAW/C,mBACXgD,EAAchD,mBAEdzD,EAAUC,cAiBhB,OANAmC,qBAAU,WACJ5F,IAAwBlE,GAC1B0H,EAAQ/E,KAAK7C,KAEd,CAACoE,EAAqBwD,IAGvB,gBAAC,WAAD,WACE,sBAAKP,MAAO,CAACiH,QAAS,QAAtB,SACE,uBAAKC,MAAM,6BAAX,UAAwC,yBAAQvM,GAAG,oBAAoBwM,QAAQ,UAAvC,SAAiD,uBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,gDAAuD,yBAAQ3M,GAAG,gBAAgBwM,QAAQ,YAAnC,SAA+C,uBAAMG,EAAE,+IAAsJ,yBAAQ3M,GAAG,YAAYwM,QAAQ,YAA/B,SAA2C,uBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,yHAEte,uBAAKzH,UAAU,8BAAf,UACE,yBAAQA,UAAU,SAAlB,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAMA,UAAU,oBAAoBM,GAAG,IAAvC,SACE,sBAAKN,UAAU,eAAekB,IAAI,eAAeC,IAAI,gBAAgBrB,MAAO,GAAII,OAAQ,SAG5F,sBAAKF,UAAU,cAAf,SACE,qBAAIA,UAAU,8BAMtB,uBAAMA,UAAU,+BAAhB,SACE,uBAAKA,UAAU,kCAAf,UACE,2BAASA,UAAU,QAAnB,UACE,qBAAIA,UAAU,eAAd,qBACA,wBACEA,UAAU,mBACVkF,OAAO,GACPC,OAAO,OACP0B,SA5CO,SAAC7F,GACpBA,EAAII,iBAEJyF,EAAS,CACP7H,MAAOkI,EAASjE,QAAQyE,MACxBV,SAAUG,EAAYlE,QAAQyE,SAmCtB,UAME,uBAAK1H,UAAU,2CAAf,UACE,wBAAOA,UAAU,kBAAjB,oBACA,wBACE2E,IAAMuC,EACNlH,UAAU,2BACVzB,KAAK,QACLtD,KAAK,QACL0M,YAAY,QACZC,UAAQ,OAGZ,uBAAK5H,UAAU,2CAAf,UACE,wBAAOA,UAAU,kBAAjB,sBACA,wBACE2E,IAAMwC,EACNnH,UAAU,2BACVzB,KAAK,WACLtD,KAAK,WACL0M,YAAY,WACZC,UAAQ,OAGZ,yBACE5H,UAAU,oCACVzB,KAAK,SAFP,2BAQJ,0BAASyB,UAAU,gDAAnB,SACE,sBAAKA,UAAU,kBAAf,SACE,eAAC,IAAD,CAAMA,UAAU,uBAAuBM,GAAG,IAA1C,SACE,kE,MCzEHuH,OArBf,SAAsCjI,GACpC,IACEkI,EAEElI,EAFFkI,SACAC,EACEnI,EADFmI,UAGF,OACE,yBACE/H,UAAU,sCACVzB,KAAK,SACLuJ,SAAWA,EAHb,SAKIC,EAAY,cAAgB,YCJ9BC,GAAoB,CACxBC,EARS,UASTC,EARM,OASNC,EARS,UASTC,EARO,QASPC,EARU,YAgDGC,OArCf,SAA4B1I,GAC1B,IAKM2I,GAFF3I,EAFFnD,MAI4B,EACxB+L,EAHF5I,EADF7E,SAI2BwN,EAE7B,OACE,gBAAC,WAAD,WACE,wBACEvI,UAAS,6BAAwBwI,EAAW,6BAA+B,GAAlE,oBACTvN,KAAK,SACLwN,aAAcF,EACdzN,GAAE,UAAMyN,EAAN,UACFhK,KAAK,QACLmK,gBAAiB,IAEnB,wBACEC,QAAO,UAAOJ,EAAP,UACPvI,UAAU,2CACVH,MAAQmI,GAAkBO,GAH5B,SAKE,sBAAKvI,UAAU,mBAAmBF,MAAO,GAAII,OAAQ,GAArD,SACE,sBAAKG,UAAU,uBC0EzB,IAsBeyB,gBAtBS,SAAChB,GAAD,MAAY,CAClC8H,iBAAkB9H,EAAM8H,iBACxBC,0BAA2B/H,EAAM+H,0BACjCC,gCAAiChI,EAAMgI,gCACvCC,oBAAqBjI,EAAMiI,wBAGF,SAAC7J,GAAD,MAAe,CACxC2H,SADwC,SAC/BmC,EAASC,EAAMC,GvB7EC,IAACpO,EAAIF,EAASG,EuB8ErCmE,GvB9EwBpE,EuB8EHkO,EvB9EOpO,EuB8EEqO,EvB9EOlO,EuB8EDmO,EvB9EY,SAAChK,EAAUC,EAAWC,GACxEF,EAASb,IAAgD,IAEzDe,EAAIC,KAAJ,UAAYnG,EAAZ,YAAkC4B,GAAO,CAAEF,UAASG,WACjDuE,MAAK,SAACC,GACLL,EAASb,GAA2BkB,EAAKC,OACzCN,EAASb,IAAgD,IACzDa,EAASb,IAA0C,IACnDa,EAASb,IAAsD,OAEhEoB,OAAM,SAACC,GACNR,EAASb,IAA0C,EAAMqB,EAAIyJ,UAC7DjK,EAASb,IAAgD,IACzDa,EAASb,IAAsD,cuB8EtDyD,EArHf,SAA6BlC,GAC3B,IACEiH,EAKEjH,EALFiH,SACA+B,EAIEhJ,EAJFgJ,iBACAC,EAGEjJ,EAHFiJ,0BACAC,EAEElJ,EAFFkJ,gCACAC,EACEnJ,EADFmJ,oBAMF,EAAsCnG,mBAAS,IAA/C,mBAAOwG,EAAP,KAAoBC,EAApB,KACA,EAA4BzG,mBAAS,GAArC,mBAAO7H,EAAP,KAAeuO,EAAf,KACMpK,EAAW0B,cAET9F,EAAOyO,cAAPzO,GAEF0O,EACHJ,EAAYpD,OATY,IAUrBoD,EAAYpD,OAXS,KAYV,IAAXjL,EAEA0O,EAAgBrQ,EAAMsQ,e1BvCJ,G0BiDlBC,EAAkB,SAAC3I,GACvBA,EAAII,iBACJyF,EAAS/L,EAAIsO,EAAarO,IAU5B,OAPA+H,qBAAU,WACJgG,IACFO,EAAe,IACfC,EAAU,MAEX,CAACV,EAAkBE,IAGpB,2BAAUhB,SAAWc,EAAmBzI,MAAO,CAAEyJ,OAAQ,QAAzD,SACE,wBACE5J,UAAU,qBACVkF,OAAO,GACPC,OAAO,OACP0B,SAAW,SAAC7F,GAAU2I,EAAgB3I,IAJxC,UAME,wBAAOhB,UAAU,6BAA6B2I,QAAQ,SAAtD,yBACA,sBAAK3I,UAAU,oCAAoC6J,SAzB3B,SAAC7I,GAC7BsI,GAAWtI,EAAIuE,OAAOkD,eAwBlB,SACIgB,EAAclP,KAAI,SAACuP,EAASrN,GAAV,OAAoB,eAAC,GAAD,CAAoCA,MAAQA,EAAQ1B,OAAQA,GAAlC+O,MAA6CC,YAEjH,eAAC,KAAD,CACE7H,QAAU,sBAAK/B,MAAO,CAAED,OAAQ,IAAKJ,MAAO,IAAKqC,SAAU,GAAI6H,UAAW,UAAhE,SAA6EjB,IACvF9G,UAAU,MACVgI,QAAUpB,EACVqB,UAAU,OAJZ,SAME,2BACElK,UAAU,mCACV6J,SAAU,SAAC7I,GAAD,OAxCW,SAACA,GAC9BqI,EAAerI,EAAIuE,OAAOmC,OAuCCyC,CAAuBnJ,IAC1ClG,GAAG,SACH4M,MAAO0B,EACPnO,KAAK,SACL0M,YAAY,iEACZyC,QAAU,WACJvB,GACF3J,EAASb,IAA0C,SAM3D,uBAAK2B,UAAU,0BAAf,UACE,qBAAGA,UAAU,gBAAb,qDAEE,uBAAMA,UAAU,gBAAhB,oBAFF,uCAIE,oBAAGA,UAAU,uBAAb,2BAJF,OAMA,eAAC,GAAD,CACE8H,SAAW0B,EACXzB,UAAWa,eC5DRyB,OA9Cf,SAA2BzK,GACzB,IACE0K,EAKE1K,EALF0K,cACAzP,EAIE+E,EAJF/E,KACAoO,EAGErJ,EAHFqJ,KACAhO,EAEE2E,EAFF3E,KACAF,EACE6E,EADF7E,OAGI+E,EAAQ1G,EAAMqH,iBAAiB1F,GAErC,OACE,sBAAIiF,UAAU,gBAAd,UACE,uBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,+CAAf,SACE,sBAAKA,UAAU,+BAA+BkB,IAAMoJ,EAAgBxK,MAAO,GAAII,OAAQ,GAAIiB,IAAI,qBAEjG,uBAAMnB,UAAU,qBAAhB,SACI/E,OAGN,uBAAK+E,UAAU,gBAAf,UACE,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,+BAAf,UACE,uBAAMG,MAAO,CAAEL,MAAM,GAAD,OAAIA,EAAJ,QAEpB,uBAAME,UAAU,kBAAhB,yBAGJ,oBAAGA,UAAU,gBAAb,SACGiJ,IAEH,uBAAMjJ,UAAU,gBAAgBuK,SAAU1P,EAA1C,SAAiDzB,EAAM+D,WAAWtC,YCD3D2P,OA7Bf,SAA6B5K,GAC3B,IACM6K,EADc7K,EAAZ8K,QACsB9M,MAAM,E5BCH,I4BCjC,OACE,qBAAIoC,UAAU,gBAAd,SACGyK,EAAclQ,KAAI,SAACuB,GAElB,IAAMnB,EAA0BvB,EAAMuR,qBAAqB7O,GAE3D,OACE,eAAC,GAAD,CAEEwO,cAAe3P,EAAwBK,KAAKtB,UAC5CmB,KAAMF,EAAwBE,KAC9BoO,KAAMtO,EAAwBC,QAC9BK,KAAMN,EAAwBK,KAAKC,KACnCF,OAAQJ,EAAwBI,QAL3BJ,EAAwBG,UCD1B8P,OAdf,SAAwBhL,GACtB,IAAQiL,EAAYjL,EAAZiL,QAER,OACE,sBAAK7K,UAAU,0BAAf,SACE,sBAAKA,UAAU,kBAAkBkB,IAAM2J,EAAU1J,IAAI,cCc5C2J,OAjBf,SAA6BlL,GAC3B,IAAQmL,EAAWnL,EAAXmL,OACFC,EAAe5R,EAAMsQ,eAAeqB,EAAO/E,QAEjD,OACE,sBAAKhG,UAAU,wCAAf,SACE,sBAAKA,UAAU,oBAAf,SACG+K,EAAOxQ,KAAI,SAAC0Q,EAAWxO,GAAZ,OAAsB,eAAC,GAAD,CAAeoO,QAASI,GAAgBD,EAAavO,YCKhFyO,OAdf,SAAuBtL,GACrB,IAAQuL,EAASvL,EAATuL,KAER,OACE,qBAAInL,UAAU,wBAAd,SACImL,KCYOC,OAff,SAA4BxL,GAC1B,IAAQyL,EAAUzL,EAAVyL,MACFL,EAAe5R,EAAMsQ,eAAe2B,EAAMrF,QAEhD,OACE,qBAAIhG,UAAU,wBAAd,SACGqL,EAAM9Q,KAAI,SAAC4Q,EAAM1O,GAAP,OAAiB,eAAC,GAAD,CAAc0O,KAAMA,GAAWH,EAAavO,UCXjE6O,GAAsB,CACjC,CACE,GAAM,EACN,MAAS,IACT,SAAY,EACZ,KAAQ,YACR,MAAS,iDACT,KAAQ,CACN,KAAQ,YACR,SAAY,CACV,SAAY,SACZ,UAAa,IACb,KAAQ,KAGZ,YAAe,iGACf,MAAS,CAAC,UAAW,UAAW,WAAY,kBAAmB,iBAAkB,cACjF,KAAQ,CACN,GAAM,EACN,WAAc,YACd,QAAU,EACV,KAAQ,YAEV,OAAU,CAAC,eAAgB,gBAC3B,aAAe,EACf,YAAc,EACd,SAAY,CACV,SAAY,iBACZ,UAAa,iBACb,KAAQ,GAEV,WAAc,EACd,cAAiB,eACjB,OAAU,GAEZ,CACE,GAAM,EACN,MAAS,IACT,SAAY,EACZ,KAAQ,CACN,KAAQ,YACR,SAAY,CACV,SAAY,SACZ,UAAa,IACb,KAAQ,KAGZ,YAAe,iGACf,MAAS,CAAC,UAAW,UAAW,WAAY,kBAAmB,iBAAkB,cACjF,KAAQ,CACN,WAAc,YACd,GAAM,EACN,OAAS,EACT,KAAQ,YAEV,OAAU,CAAC,uBAAwB,wBACnC,aAAe,EACf,YAAc,EACd,SAAY,CACV,SAAY,gBACZ,UAAa,iBACb,KAAQ,GAEV,WAAc,EACd,cAAiB,uBACjB,OAAU,IACV,MAAS,iDACT,KAAQ,aAEV,CACE,GAAM,EACN,MAAS,IACT,SAAY,EACZ,KAAQ,CACN,SAAY,CACV,SAAY,SACZ,UAAa,IACb,KAAQ,IAEV,KAAQ,aAEV,YAAe,iGACf,MAAS,CAAC,UAAW,UAAW,WAAY,kBAAmB,iBAAkB,cACjF,KAAQ,CACN,WAAc,YACd,GAAM,EACN,OAAS,EACT,KAAQ,YAEV,OAAU,CAAC,uBAAwB,wBACnC,aAAe,EACf,YAAc,EACd,SAAY,CACV,SAAY,iBACZ,UAAa,kBACb,KAAQ,GAEV,WAAc,EACd,cAAiB,uBACjB,OAAU,IACV,MAAS,iDACT,KAAQ,cCTGC,OArEf,SAA2B3L,GACzB,IACE9E,EAQE8E,EARF9E,GACAkD,EAOE4B,EAPF5B,MACA6B,EAMED,EANFC,MACA7F,EAKE4F,EALF5F,UACAF,EAIE8F,EAJF9F,WACAyE,EAGEqB,EAHFrB,KACAxD,EAEE6E,EAFF7E,OACAX,EACEwF,EADFxF,aAGI8E,EAAW0B,cACXF,EAAUC,cAEVb,EAAQ1G,EAAMqH,iBAAiB1F,GAE/BmC,EAAsB2D,aAAY,SAACC,GAAD,OAAWA,EAAM5D,uBAWzD,OACE,2BAAS8C,UAAU,+BAA+BlF,GAAIA,EAAtD,UACGd,GACC,sBAAKgG,UAAU,mBAAf,SACE,8CAEJ,sBAAKA,UAAU,uDAAf,SACE,eAAC,IAAD,CAAMM,GAAE,kBAAaxF,GAArB,SACE,sBACEkF,UAAU,oBACVkB,IAAM9G,EACN0F,MAAM,MACNI,OAAO,MACPiB,IAAI,cAIV,eAAE,GAAF,CACErG,GAAIA,EACJkD,MAAOA,EACP6B,MAAOA,EACP/F,WAAYA,EACZyE,KAAOA,EACPuB,MAAQA,EACRC,qBAjCuB,SAACiB,GAC5BA,EAAII,iBACAlE,IAAwBlE,EAC1B0H,EAAQ/E,KAAK7C,GAEboG,EAASD,GAAcnE,GAAKhB,WCZnB0R,OA5Bf,SAAgC5L,GAC9B,IAAQjD,EAA+BiD,EAA/BjD,aAAcC,EAAiBgD,EAAjBhD,aAEhB6O,EAAwCrS,EAAMsS,gCAAgC/O,EAAcC,GAElG,OACE,sBAAKoD,UAAU,iCAAf,SACGyL,EAAsClR,KAAI,SAACC,GAAD,OACzC,eAAC,GAAD,CAEEM,GAAIN,EAAMM,GACVkD,MAAOxD,EAAMwD,MACb6B,MAAOrF,EAAMqF,MACb7F,UAAWQ,EAAMR,UACjBF,WAAYU,EAAMV,WAClByE,KAAM/D,EAAM+D,KACZnE,aAAcI,EAAMJ,cAPfI,EAAMM,UCRN6Q,OANf,WACE,OACE,6CC8MJ,IAeMC,GAAsBrJ,IAxL5B,SAAoB3C,GAClB,IAAQ9E,EAAOyO,cAAPzO,GACFoE,EAAW0B,cACXF,EAAUC,cAGdxF,EAOEyE,EAPFzE,OACAwB,EAMEiD,EANFjD,aACAmC,EAKEc,EALFd,SACA+M,EAIEjM,EAJFiM,iBACAC,EAGElM,EAHFkM,qBACA5O,EAEE0C,EAFF1C,oBACA6C,EACEH,EADFG,qBAKIzD,EAFkBnB,EAAOgL,MAAK,SAAC3L,GAAD,OAAWA,EAAMM,MAAQA,KAIvDgF,EAAQ1G,EAAMqH,iBAAiBnE,EAAsBvB,QAqB3D,OAnBA+H,qBAAU,WAIR,OAHA5D,ElCzC6B,SAACpE,GAAD,OAAQ,SAACoE,EAAUC,EAAWC,GAAtB,OACvCA,EAAI1D,IAAJ,UAAWxC,EAAX,YAAgC4B,IAC7BwE,MAAK,SAACC,GACLL,EAASb,GAA2BkB,EAAKC,UAE1CC,OAAM,SAACC,QkCoCCqM,CAAkBjR,IAC3BoE,ElCnDiC,SAACpE,GAAD,OAAQ,SAACoE,EAAUC,EAAWC,GAAtB,OAC3CA,EAAI1D,IAAJ,UAAWxC,EAAX,YAA8B4B,EAA9B,YACGwE,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACDwM,EAAwB5S,EAAM6S,oBAAoBzM,GACxDN,EAASb,GAA+B2N,OAEzCvM,OAAM,SAACC,QkC6CCwM,CAAsBpR,IAExB,WACLoE,EAASb,MACTa,EAASb,SAEV,CAACvD,EAAIoE,IAYN,gBAAC,WAAD,WACE,wBAAMc,UAAU,aAAhB,UACE,2BAASA,UAAU,WAAnB,UACE,eAAE,GAAF,CAAqB+K,OAAQzO,EAAsByO,SACnD,sBAAK/K,UAAU,gCAAf,SACE,uBAAKA,UAAU,oBAAf,UACG1D,EAAsBtC,WACrB,sBAAKgG,UAAU,iBAAf,SACE,8CAEJ,uBAAKA,UAAU,yBAAf,UACE,qBAAIA,UAAU,iBAAd,SACI1D,EAAsB6P,cAE1B,0BACEnM,UAAS,2CAAsC1D,EAAsBxC,WAAa,oCAAsC,IACxHyE,KAAK,SACL0B,QAAS,SAACe,IA3BF,SAACA,GACvBA,EAAII,iBACAlE,IAAwBlE,EAC1B0H,EAAQ/E,KAAK7C,GAEbiH,EAAqBzD,EAAsBxB,IAAKwB,EAAsBxC,YAsBtCsS,CAAgBpL,IAHtC,UAKE,sBAAKhB,UAAU,0BAA0BF,MAAO,GAAII,OAAQ,GAA5D,SACE,sBAAKG,UAAU,qBAEjB,uBAAML,UAAU,kBAAhB,gCAGJ,uBAAKA,UAAU,0BAAf,UACE,uBAAKA,UAAU,gCAAf,UACE,uBAAMG,MAAO,CAAEL,MAAM,GAAD,OAAKA,EAAL,QACpB,uBAAME,UAAU,kBAAhB,uBAEF,uBAAMA,UAAU,uCAAhB,SAAyD7D,KAAKC,MAAME,EAAsBvB,aAE5F,sBAAIiF,UAAU,qBAAd,UACE,qBAAIA,UAAU,8CAAd,SACG1D,EAAsBiC,OAEzB,sBAAIyB,UAAU,gDAAd,UACI1D,EAAsB+P,SAD1B,eAGA,sBAAIrM,UAAU,8CAAd,iBACQ1D,EAAsBpC,UAD9B,gBAIF,uBAAK8F,UAAU,kBAAf,UACE,qBAAGA,UAAU,wBAAb,mBAAwC1D,EAAsB0B,SAC9D,uBAAMgC,UAAU,uBAAhB,0BAEF,uBAAKA,UAAU,mBAAf,UACE,qBAAIA,UAAU,yBAAd,2BACA,eAAE,GAAF,CAAoBqL,MAAQ/O,EAAsB+O,WAEpD,uBAAKrL,UAAU,iBAAf,UACE,qBAAIA,UAAU,uBAAd,2BACA,uBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAS,mCAA8B1D,EAAsB7C,KAAKG,OAAS,gCAAlE,yBAAd,SACE,sBACEoG,UAAU,gCACVkB,IAAK5E,EAAsB7C,KAAKC,UAChCoG,MAAO,GACPI,OAAQ,GACRiB,IAAI,kBAGR,uBAAMnB,UAAU,sBAAhB,SACI1D,EAAsB7C,KAAKwB,OAE9BqB,EAAsB7C,KAAKG,OAC1B,uBAAMoG,UAAU,wBAAhB,oBAKJ,sBAAKA,UAAU,wBAAf,SACE,oBAAGA,UAAU,iBAAb,SACI1D,EAAsB6P,mBAI9B,2BAASnM,UAAU,4BAAnB,UACG6L,EAEC,gBAAC,WAAD,WACE,sBAAI7L,UAAU,iBAAd,0BAAyC,uBAAMA,UAAU,kBAAhB,SAAmClB,EAASkH,YACrF,eAAE,GAAF,CAAsB0E,QAAS5L,OAE/B,eAAC,GAAD,IACF5B,IAAwBlE,GAA4B,eAAE,GAAF,YAI5D,0BAASgH,UAAU,oBAAnB,SACE,eAAC,GAAD,CACEgE,eAAgB1H,EAAsBd,KAAKP,KAC3CO,KAAMc,EAAsBd,KAC5ByI,OAAQqH,GACRpH,cAAe5H,SAIrB,sBAAK0D,UAAU,YAAf,SACE,2BAASA,UAAU,qBAAnB,UACE,qBAAIA,UAAU,qBAAd,+CACE8L,EACE,eAAE,GAAF,CAAyBnP,aAAeA,EAAeC,aAAczB,IACrE,eAAC,GAAD,YAIV,yBAAQ6E,UAAU,mBAAlB,SACE,eAAC,IAAD,CAAMA,UAAU,oBAAoBM,GAAG,IAAvC,SACE,sBAAKN,UAAU,eAAekB,IAAI,eAAeC,IAAI,gBAAgBrB,MAAO,GAAII,OAAQ,eAoCnF4B,gBAZS,SAAChB,GAAD,MAAY,CAClC3F,OAAQ2F,EAAM3F,OACd2D,SAAUgC,EAAMhC,SAChBnC,aAAcmE,EAAMnE,aACpBkP,iBAAkB/K,EAAM+K,iBACxBC,qBAAsBhL,EAAMgL,qBAC5B5O,oBAAqB4D,EAAM5D,wBAZF,SAACgC,GAAD,MAAe,CACxCa,qBADwC,SACnBuM,EAASC,GAC5BrN,EAASD,GAAcqN,EAASC,QAgBrBzK,CAA6C8J,ICzN7CY,OATf,WACE,OACE,gBAAE,WAAF,WACE,sCACA,qDCuBN,IAKe1K,gBALS,SAAChB,GAAD,MAAY,CAClC5D,oBAAqB4D,EAAM5D,uBAId4E,EA5Bf,SAAsBlC,GACpB,IAAQ6M,EAA6C7M,EAA7C6M,OAAQC,EAAqC9M,EAArC8M,KAAMC,EAA+B/M,EAA/B+M,MAAOzP,EAAwB0C,EAAxB1C,oBAE7B,OACE,eAAC,IAAD,CACEwP,KAAMA,EACNC,MAAOA,EACPF,OAAQ,kBACNvP,IAAwBlE,EACpByT,IACA,eAAC,IAAD,CAAUnM,GAAIxH,UCmD1B,IAOegJ,gBAPS,SAAChB,GAAD,MAAY,CAClC3F,OAAQ2F,EAAM3F,OACd+B,oBAAqB4D,EAAM5D,oBAC3B0P,aAAc9L,EAAM8L,gBAIkB,KAAzB9K,EAtDf,SAAalC,GACX,IACEgN,EAGEhN,EAHFgN,aACAzR,EAEEyE,EAFFzE,OACA+B,EACE0C,EADF1C,oBAGF,OAAK0P,EAOH,eAAC,IAAD,CAAelM,QAAUlI,EAAzB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOmU,OAAK,EAACD,KAAM5T,EAAnB,SACE,eAAC,GAAD,CAAMkH,UAAU,kCAElB,eAAC,IAAD,CAAO2M,OAAK,EAACD,KAAM5T,EAAnB,SACGoE,IAAwBlE,GAA+BkE,IAAwBlE,EAC5E,eAAC,GAAD,IACA,eAAC,GAAD,CAAMgH,UAAU,kCAEtB,eAAC,GAAD,CACE2M,OAAK,EACLD,KAAM5T,EACN2T,OAAQ,kBAAM,eAAC,GAAD,CAAWtR,OAAQA,EAAQ6E,UAAU,YAGrD,eAAC,IAAD,CAAO2M,OAAK,EAACD,KAAM5T,EAAnB,SACE,eAAC,GAAD,CAAUkH,UAAU,WAEtB,eAAC,IAAD,UACE,eAAC,GAAD,WAzBJ,eAAC,GAAD,O,SCnBA6M,GAAe,CACnB7I,eAAgB,QAChB7I,OAAQ,GACR2D,SAAU,GACV5B,oBAAqBlE,EACrB4T,cAAc,EACdf,kBAAkB,EAClBxJ,OAAQlJ,EACRiJ,WAAYnJ,EACZ6S,sBAAsB,EACtB1C,YAAa,GACb0D,cAAe,EACflE,kBAAkB,EAClBC,2BAA2B,EAC3BC,gCAAiC,KACjCC,oBAAqB,KACrBpM,aAAc,ICNhB,IAAMyC,G3Cb0B,WAAqB,IAE7C2N,EAAgBC,IAAMC,OAAO,CACjCC,QAASxU,EACTyU,QARoB,IASpBC,QAAS,CACP,UAAWzU,KAgBf,OAZAoU,EAAcM,aAAaC,SAASC,KAClC,SAACD,GAAD,OACE,IAAIE,SAAQ,SAACC,EAASC,GAEpBD,EAAQH,SAEZ,SAACK,GAAD,OACE,IAAIH,SAAQ,SAACC,EAASC,GACpBA,EAAOC,SAINZ,E2CTGa,CAAiBpV,GAEvBqV,GAAQC,uBDOd,WAAiD,IAA/BhN,EAA8B,uDAAtB+L,GAAc3H,EAAQ,uCAC9C,OAAQA,EAAO3G,MACb,KAAKH,GACH,OAAO,6BACF0C,GADL,IAEE8H,iBAAkB1D,EAAO1G,UAG7B,KAAKJ,GACH,OAAO,6BACF0C,GADL,IAEEgI,gCAAiC5D,EAAO1G,UAG5C,KAAKJ,GACH,OAAO,6BACF0C,GADL,IAEE+H,0BAA2B3D,EAAO1G,QAAQE,mBAC1CqK,oBAAqB7D,EAAO1G,QAAQG,mBAGxC,KAAKP,EACH,OAAO,6BACF0C,GADL,IAEEkD,eAAgBkB,EAAO1G,UAG3B,KAAKJ,EACH,OAAO,6BACF0C,GADL,IAEEuB,OAAQ6C,EAAO1G,UAGnB,KAAKJ,EACH,OAAO,6BACF0C,GADL,IAEE3F,OAAQ+J,EAAO1G,QACfoO,cAAc,IAElB,KAAKxO,EACH,OAAO,6BACF0C,GADL,IAEEnE,aAAcuI,EAAO1G,QACrBsN,sBAAsB,IAE1B,KAAK1N,EACH,OAAO,6BACF0C,GADL,IAEEnE,aAAc,GACdmP,sBAAsB,IAE1B,KAAK1N,EACH,OAAO,6BACF0C,GADL,IAEEhC,SAAUoG,EAAO1G,QACjBqN,kBAAkB,IAEtB,KAAKzN,EACH,OAAO,6BACF0C,GADL,IAEEhC,SAAU,GACV+M,kBAAkB,IAEtB,KAAKzN,EACH,OAAO,6BACF0C,GADL,IAEE5D,oBAAqBgI,EAAO1G,UAEhC,KAAKJ,GACH,OAAO,6BACF0C,GADL,IAEE3F,OAAQ/B,EAAM2U,iBAAiB7I,EAAO1G,QAAQ1D,GAAIgG,EAAM3F,OAAQ+J,EAAO1G,QAAQnC,YAEnF,KAAK+B,EACH,OAAO,6BACF0C,GADL,IAEEsB,WAAY8C,EAAO1G,UAEvB,KAAKJ,EACH,OAAO,6BACF0C,GADL,IAEE5D,oBAAqBlE,EACrBoJ,WAAYnJ,IAEhB,QACE,OAAO6H,KC1FXkN,+BACEC,0BAAgBC,IAAMC,kBAAkB/O,OAI5CyO,GAAM3O,UvCzB+B,SAACA,EAAUC,EAAWC,GAAtB,OACnCA,EAAI1D,IAAIxC,GACLoG,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACDwM,EAAwB5S,EAAM6S,oBAAoBzM,GACxDN,EAASb,GAAyB2N,OAEnCvM,OAAM,SAACC,UuCqBZ0O,IAAS3B,OACP,eAAC,IAAM4B,WAAP,UACE,eAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.c6087204.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nconst token = localStorage.getItem('token') ?? '';\n\nexport const getAxiosInstance = (history = null) => {\n\n  const axiosInstance = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'x-token': token,\n    },\n  });\n\n  axiosInstance.interceptors.response.use(\n    (response) =>\n      new Promise((resolve, reject) =>\n      {\n        resolve(response);\n      }),\n    (error) =>\n      new Promise((resolve, reject) => {\n        reject(error);\n      }),\n  );\n\n  return axiosInstance;\n};\n","export const AppRoute = {\n  ROOT: '/',\n  LOGIN: '/login',\n  FAVORITES: '/favorites',\n  HOTELS: '/hotels/:id',\n};\n\nexport const MAX_RATING = 5;\nexport const MAX_PERCENT = 100;\nexport const MAX_COMMENTS_AMOUNT = 10;\n\nexport const ZOOM = 12;\n\nexport const URL_MARKER_DEFAULT = 'img/pin.svg';\n\nexport const URL_MARKER_CURRENT = 'img/pin-active.svg';\n\nexport const cityList = [\n  'Paris',\n  'Cologne',\n  'Brussels',\n  'Amsterdam',\n  'Hamburg',\n  'Dusseldorf',\n];\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const LoginValue = {\n  UNAUTHORIZED: 'UNAUTHORIZED',\n};\n\nexport const APIRoute = {\n  HOTELS: '/hotels',\n  FAVORITE: '/favorite',\n  COMMENTS: '/comments',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n};\n\nexport const SortByValues = {\n  POPULAR: 'Popular',\n  PRICE_LOW_TO_HIGH: 'Price: low to high',\n  PRICE_HIGH_TO_LOW: 'Price: high to low',\n  TOP_RATED_FIRST: 'Top rated first',\n};\n","import { AuthorizationStatus } from '../const';\nimport nanoid from 'nanoid';\n\nimport {\n  MAX_RATING,\n  MAX_PERCENT,\n  SortByValues\n} from '../const';\n\nclass Utils {\n  static adaptToClient(offerFromServer) {\n    const adaptedOfferForClient = Object.assign(\n      {},\n      offerFromServer,\n      {\n        host: Object.assign(\n          {},\n          offerFromServer.host,\n          {\n            avatarUrl: offerFromServer.host.avatar_url,\n            isPro: offerFromServer.host.is_pro,\n          },\n        ),\n        isFavorite: offerFromServer.is_favorite,\n        isPremium: offerFromServer.is_premium,\n        maxAdults: offerFromServer.max_adults,\n        previewImage: offerFromServer.preview_image,\n      },\n    );\n\n    // Ненужные ключи мы удаляем\n    delete adaptedOfferForClient.host.avatar_url;\n    delete adaptedOfferForClient.host.is_pro;\n\n    delete adaptedOfferForClient.is_favorite;\n    delete adaptedOfferForClient.is_premium;\n    delete adaptedOfferForClient.max_adults;\n    delete adaptedOfferForClient.preview_image;\n\n    return adaptedOfferForClient;\n  }\n\n  static adaptPlacesToClient(placesFromServer) {\n    return placesFromServer.map((place) => this.adaptToClient(place));\n  }\n\n  static adaptCommentToClient(commentFromServer) {\n    const adaptedCommentForClient = Object.assign(\n      {},\n      commentFromServer,\n      {\n        comment: commentFromServer.comment,\n        date: commentFromServer.date,\n        id: commentFromServer.id,\n        rating: commentFromServer.rating,\n        user: Object.assign(\n          {},\n          commentFromServer.user,\n          {\n            avatarUrl: commentFromServer.user.avatar_url,\n            isPro: commentFromServer.user.is_pro,\n            id: commentFromServer.user.id,\n            name: commentFromServer.user.name,\n          },\n        ),\n      },\n    );\n\n    // Ненужные ключи мы удаляем\n    delete adaptedCommentForClient.user.avatar_url;\n    delete adaptedCommentForClient.user.is_pro;\n\n    return adaptedCommentForClient;\n  }\n\n  static adaptToServer(filmFromClient) {\n    const filmInfoForServer = Object.assign(\n      {},\n      {},\n    );\n\n    return filmInfoForServer;\n  }\n\n  static getFavoritePlacesSeparatedByCity(places) {\n    const favoritePlaces = new Map();\n\n    places.forEach((place) => {\n      if (place.isFavorite) {\n        if (favoritePlaces.has(place.city.name)) {\n          favoritePlaces.get(place.city.name).push(place);\n        } else {\n          favoritePlaces.set(place.city.name, []);\n          favoritePlaces.get(place.city.name).push(place);\n        }\n      }\n    });\n\n    return favoritePlaces;\n  }\n\n  static getFilteredPlaces(activeCity, places) {\n    let filteredPlaces = [];\n    filteredPlaces = places.filter((item) => item.city.name === activeCity);\n    return filteredPlaces;\n  }\n\n  static isCheckedAuth = (authorizationStatus) =>\n    authorizationStatus === AuthorizationStatus.UNKNOWN;\n\n  static formatDate = (dateString) => {\n    const DATE_OPTIONS = { year: 'numeric', month: 'short' };\n\n    return (new Date(dateString)).toLocaleDateString('en-US', DATE_OPTIONS);\n  }\n\n  static generateIdKeys(listLength) {\n    const list = new Array(listLength).fill('');\n    const generatedIdList = list.map(() => nanoid(10));\n    return generatedIdList;\n  }\n\n  static getWidthByRating(rating) {\n    const roundedRating = Math.round(rating);\n    const widthValue = (MAX_PERCENT * roundedRating) / MAX_RATING;\n    return widthValue;\n  }\n\n  static getSortedPlaces = (sortTypeValue, places) => {\n    const clonedPlaces = places.slice();\n\n    const _sortByPriceFromLowToHigh = (hotels) => hotels.sort((firstPlace, secondPlace) => firstPlace.price - secondPlace.price);\n\n    const _sortByPriceFromHighToLow = (hotels) => hotels.sort((firstPlace, secondPlace) => secondPlace.price - firstPlace.price);\n\n    const _sortByRating = (hotels) => hotels.sort((firstPlace, secondPlace) => secondPlace.rating - firstPlace.rating);\n\n    switch (sortTypeValue) {\n      case SortByValues.POPULAR:\n        return clonedPlaces;\n      case SortByValues.PRICE_LOW_TO_HIGH:\n        return _sortByPriceFromLowToHigh(places);\n      case SortByValues.PRICE_HIGH_TO_LOW:\n        return _sortByPriceFromHighToLow(places);\n      case SortByValues.TOP_RATED_FIRST:\n        return _sortByRating(places);\n      default:\n        return clonedPlaces;\n    }\n  }\n\n  static getUpdatedPlaces(id, places, newPlace) {\n    const adaptedPlaceForClient = this.adaptToClient(newPlace);\n    const newPlaces = [...places];\n    const index = newPlaces.findIndex((place) => place.id === id);\n    newPlaces[index] = adaptedPlaceForClient;\n    return newPlaces;\n  }\n\n  static getNearbyPlacesFromCommonPlaces(nearbyPlaces, commonPlaces) {\n    const nearbyPlacesLinks = [];\n\n    nearbyPlaces.forEach((nearbyPlace) => {\n      const indexFromCommonPlaces = commonPlaces.findIndex((commonPlace) => commonPlace.id === nearbyPlace.id);\n      nearbyPlacesLinks.push(commonPlaces[indexFromCommonPlaces]);\n    });\n\n    return nearbyPlacesLinks;\n  }\n}\n\nexport default Utils;\n","export const ActionType = {\n  CHANGE_CITY: 'places/changeCity',\n  CHANGE_SORT_BY: 'places/sortBy',\n  LOAD_PLACES: 'places/loadPlaces',\n  LOAD_NEARBY_PLACES: 'places/loadNearbyPlaces',\n  REMOVE_NEARBY_PLACES: 'places/removeNearbyPlaces',\n  LOAD_COMMENTS: 'comments/loadComments',\n  REMOVE_COMMENTS: 'comments/removeComments',\n  CHANGE_AUTHORIZATION_STATUS: 'user/changeAuthorizationStatus',\n  CHANGE_LOGIN: 'user/changeLogin',\n  LOGOUT: 'user/logout',\n  CHANGE_FAVORITE: 'place/isFavorite',\n  CHANGE_LOADING_COMMENT_PROCESS_STATUS: 'comment/changeLoadingCommentProcessStatus',\n  SHOW_COMMENT_ERROR_MESSAGE: 'comment/showErrorCommentFormMessage',\n  SEND_COMMENT: 'comment/sendComment',\n  SEND_COMMENT_RATING: 'comment/sendCommentRating',\n  CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS: 'comment/changeCommentSendedSuccessfulyStatus',\n};\n\nexport const ActionCreator = {\n  changeLoadingCommentProcessStatus: (isLoading) => ({\n    type: ActionType.CHANGE_LOADING_COMMENT_PROCESS_STATUS,\n    payload: isLoading,\n  }),\n  changeIsCommentSendedSuccessfullyStatus: (isCommentSendedSuccessfully) => ({\n    type: ActionType.CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS,\n    payload: isCommentSendedSuccessfully,\n  }),\n  showErrorCommentFormMessage: (isShowErrorMessage, errorMessageText) => ({\n    type: ActionType.SHOW_COMMENT_ERROR_MESSAGE,\n    payload: {isShowErrorMessage, errorMessageText},\n  }),\n  changeCity: (cityName) => ({\n    type: ActionType.CHANGE_CITY,\n    payload: cityName,\n  }),\n  changeSortBy: (sortByValue) => ({\n    type: ActionType.CHANGE_SORT_BY,\n    payload: sortByValue,\n  }),\n  loadPlaces: (places) => ({\n    type: ActionType.LOAD_PLACES,\n    payload: places,\n  }),\n  loadNearbyPlaces: (nearbyPlaces) => ({\n    type: ActionType.LOAD_NEARBY_PLACES,\n    payload: nearbyPlaces,\n  }),\n  loadComments: (comments) => ({\n    type: ActionType.LOAD_COMMENTS,\n    payload: comments,\n  }),\n  changeAuthorizationStatus: (status) => ({\n    type: ActionType.CHANGE_AUTHORIZATION_STATUS,\n    payload: status,\n  }),\n  changeLogin: (login) => ({\n    type: ActionType.CHANGE_LOGIN,\n    payload: login,\n  }),\n  changeFavorite: (id, newPlace) => ({\n    type: ActionType.CHANGE_FAVORITE,\n    payload: {id, newPlace},\n  }),\n  removeNearbyPlaces: () => ({\n    type: ActionType.REMOVE_NEARBY_PLACES,\n  }),\n  removeComments: () => ({\n    type: ActionType.REMOVE_COMMENTS,\n  }),\n  logout: () => ({\n    type: ActionType.LOGOUT,\n  }),\n};\n","import { ActionCreator } from './actions';\nimport { AuthorizationStatus, APIRoute } from '../const';\nimport Utils from '../utils/utils';\n\nexport const fetchPlacesList = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.HOTELS)\n    .then(({ data }) => {\n      const adaptedPlacesToClient = Utils.adaptPlacesToClient(data);\n      dispatch(ActionCreator.loadPlaces(adaptedPlacesToClient));\n    })\n    .catch((err) => {})\n);\n\nexport const fetchNearbyPlacesList = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.HOTELS}/${id}/nearby`)\n    .then(({ data }) => {\n      const adaptedPlacesToClient = Utils.adaptPlacesToClient(data);\n      dispatch(ActionCreator.loadNearbyPlaces(adaptedPlacesToClient));\n    })\n    .catch((err) => {})\n);\n\nexport const fetchCommentsList = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.COMMENTS}/${id}`)\n    .then((info) => {\n      dispatch(ActionCreator.loadComments(info.data));\n    })\n    .catch((err) => {})\n);\n\nexport const addToFavorite = (id, isFavorite) => (dispatch, _getState, api) => (\n  api.post(`${ APIRoute.FAVORITE }/${ id }/${ isFavorite ? 1 : 0 }`)\n    .then((info) => {\n      dispatch(ActionCreator.changeFavorite(id, info.data));\n    })\n    .catch((err) => {})\n);\n\nexport const login = ({ login: email, password }) => (dispatch, _getState, api) => (\n  api.post(APIRoute.LOGIN, { email, password })\n    .then((info) => {\n      localStorage.setItem('token', info.data.token);\n      localStorage.setItem('login', info.data.email);\n      dispatch(ActionCreator.changeLogin(info.data.email));\n      dispatch(ActionCreator.changeAuthorizationStatus(AuthorizationStatus.AUTH));\n    })\n    .catch((err) => {})\n);\n\nexport const sendComment = (id, comment, rating) => (dispatch, _getState, api) => {\n  dispatch(ActionCreator.changeLoadingCommentProcessStatus(true));\n\n  api.post(`${APIRoute.COMMENTS}/${ id }`, { comment, rating })\n    .then((info) => {\n      dispatch(ActionCreator.loadComments(info.data));\n      dispatch(ActionCreator.changeLoadingCommentProcessStatus(false));\n      dispatch(ActionCreator.showErrorCommentFormMessage(false));\n      dispatch(ActionCreator.changeIsCommentSendedSuccessfullyStatus(true));\n    })\n    .catch((err) => {\n      dispatch(ActionCreator.showErrorCommentFormMessage(true, err.message));\n      dispatch(ActionCreator.changeLoadingCommentProcessStatus(false));\n      dispatch(ActionCreator.changeIsCommentSendedSuccessfullyStatus(false));\n    });\n};\n\nexport const logout = () => (dispatch, _getState, api) => (\n  api.delete(APIRoute.LOGOUT)\n    .then(() => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('login');\n      dispatch(ActionCreator.logout());\n    })\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Link\n} from 'react-router-dom';\n\nfunction CardInfo (props) {\n  const {\n    id,\n    price,\n    title,\n    isFavorite,\n    type,\n    width,\n    favoriteClickHandler,\n  } = props;\n\n  return (\n    <div className=\"place-card__info\">\n      <div className=\"place-card__price-wrapper\">\n        <div className=\"place-card__price\">\n          <b className=\"place-card__price-value\">&euro;{ price }</b>\n          <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n        </div>\n        <button className=\"place-card__bookmark-button button\" type=\"button\" onClick={favoriteClickHandler}>\n          <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\" style={{ stroke: isFavorite && '#4481c3', fill: isFavorite && '#4481c3' }}>\n            <use xlinkHref=\"#icon-bookmark\"></use>\n          </svg>\n          <span className=\"visually-hidden\">To bookmarks</span>\n        </button>\n      </div>\n      <div className=\"place-card__rating rating\">\n        <div className=\"place-card__stars rating__stars\">\n          <span style={{ width: `${width}%` }}></span>\n          <span className=\"visually-hidden\">Rating</span>\n        </div>\n      </div>\n      <h2 className=\"place-card__name\">\n        <Link to={`/hotels/${id}`}>{title}</Link>\n      </h2>\n      <p className=\"place-card__type\">{type}</p>\n    </div>\n  );\n}\n\nCardInfo.propTypes = {\n  id: PropTypes.number,\n  price: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool,\n  type: PropTypes.string,\n  width: PropTypes.number,\n  favoriteClickHandler: PropTypes.func,\n};\n\nexport default CardInfo;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Utils from '../../utils/utils';\n\nimport {\n  Link,\n  useHistory\n} from 'react-router-dom';\n\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\n\nimport { addToFavorite } from '../../store/api-actions';\n\nimport CardInfo from '../card-info/card-info';\n\nimport {\n  AuthorizationStatus,\n  AppRoute\n} from '../../const.js';\n\nfunction Room(props) {\n  const {\n    id,\n    price,\n    onListItemHover,\n    title,\n    isPremium,\n    isFavorite,\n    type,\n    rating,\n    previewImage,\n  } = props;\n\n  const width = Utils.getWidthByRating(rating);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const authorizationStatus = useSelector((state) => state.authorizationStatus);\n\n  const listItemHoverHandler = (evt) => {\n    onListItemHover(evt.currentTarget);\n  };\n\n  const favoriteClickHandler = (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.LOGIN);\n    } else {\n      dispatch(addToFavorite(id, !isFavorite));\n    }\n  };\n\n  return (\n    <article\n      className=\"cities__place-card place-card\"\n      onMouseEnter={listItemHoverHandler}\n      id={id}\n    >\n      {isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>}\n      <div className=\"cities__image-wrapper place-card__image-wrapper\">\n        <Link to={`/hotels/${id}`}>\n          <img\n            className=\"place-card__image\"\n            src={ previewImage }\n            width=\"260\"\n            height=\"200\"\n            alt=\"Place\"\n          />\n        </Link>\n      </div>\n      < CardInfo\n        id={id}\n        price={price}\n        title={title}\n        isFavorite={isFavorite}\n        type={type}\n        width={ width }\n        favoriteClickHandler={favoriteClickHandler}\n      />\n    </article>\n  );\n}\n\nRoom.propTypes = {\n  id: PropTypes.number.isRequired,\n  price: PropTypes.number,\n  onListItemHover: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  isPremium: PropTypes.bool,\n  isFavorite: PropTypes.bool.isRequired,\n  type: PropTypes.string,\n  previewImage: PropTypes.string,\n  rating: PropTypes.number,\n};\n\nexport default Room;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  'id': PropTypes.number.isRequired,\n  'price': PropTypes.number.isRequired,\n  'bedrooms': PropTypes.number.isRequired,\n  'city': PropTypes.shape({\n    'location': PropTypes.shape({\n      'latitude': PropTypes.number.isRequired,\n      'longitude': PropTypes.number.isRequired,\n      'zoom': PropTypes.number.isRequired,\n    }).isRequired,\n    'name': PropTypes.string.isRequired,\n  }).isRequired,\n  'description': PropTypes.string.isRequired,\n  'goods': PropTypes.arrayOf(PropTypes.string).isRequired,\n  'host': PropTypes.shape({\n    'id': PropTypes.number.isRequired,\n    'avatarUrl': PropTypes.string,\n    'isPro': PropTypes.bool,\n    'name': PropTypes.string.isRequired,\n  }),\n  'images': PropTypes.arrayOf(PropTypes.string).isRequired,\n  'isFavorite': PropTypes.bool,\n  'isPremium': PropTypes.bool,\n  'location': PropTypes.shape({\n    'latitude': PropTypes.number.isRequired,\n    'longitude': PropTypes.number.isRequired,\n    'zoom': PropTypes.number.isRequired,\n  }),\n  'maxAdults': PropTypes.number,\n  'previewImage': PropTypes.string,\n  'rating': PropTypes.number.isRequired,\n  'title': PropTypes.string.isRequired,\n  'type': PropTypes.string.isRequired,\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Room from '../room/room';\nimport placeProp from '../room/room.prop';\n\nfunction RoomList(props) {\n  const { places, onListItemHover } = props;\n\n  return (\n    <div className=\"cities__places-list places__list tabs__content\">\n      {places.map((place) => (\n        <Room\n          key={place.id}\n          id={place.id}\n          price={place.price}\n          onListItemHover={onListItemHover}\n          title={place.title}\n          isPremium={place.isPremium}\n          isFavorite={place.isFavorite}\n          type={place.type}\n          rating={place.rating}\n          previewImage={place.previewImage}\n        />\n      ))}\n    </div>\n  );\n}\n\nRoomList.propTypes = {\n  places: PropTypes.arrayOf(placeProp),\n  onListItemHover: PropTypes.func,\n};\n\nexport default RoomList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AppRoute } from '../../const.js';\n\nfunction SignIn(props) {\n\n  return (\n    <li className=\"header__nav-item user\">\n      <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.LOGIN}>\n        <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n        </div>\n        <span className=\"header__login\">Sign in</span>\n      </Link>\n    </li>\n  );\n}\n\nexport default SignIn;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Tooltip from 'rc-tooltip';\n\nimport { AppRoute } from '../../const.js';\nimport { ActionCreator } from '../../store/actions';\n\nfunction SignOut(props) {\n  const { login, onSignOutClick } = props;\n\n  return (\n    <Fragment>\n      <Tooltip\n        trigger={ ['hover'] }\n        placement='bottom'\n        overlay={ <div style={ { height: 100, width: 150, fontSize: 25 } }>Click to show up favorites</div> }\n      >\n        <li className=\"header__nav-item user\">\n          <Link className=\"header__nav-link header__nav-link--profile\" to={ AppRoute.FAVORITES }>\n            <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n            </div>\n            <span className=\"header__user-name user__name\">{ login }</span>\n          </Link>\n        </li>\n      </ Tooltip>\n      <li className=\"header__nav-item\">\n        <Link\n          className=\"header__nav-link\"\n          to={AppRoute.ROOT}\n          onClick={() => {\n            onSignOutClick();\n          }}\n        >\n          <span className=\"header__signout\">Sign out</span>\n        </Link>\n      </li>\n    </ Fragment>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSignOutClick() {\n    dispatch(ActionCreator.logout());\n  },\n});\n\nSignOut.propTypes = {\n  login: PropTypes.string,\n  onSignOutClick: PropTypes.func.isRequired,\n};\n\nexport { SignOut };\nexport default connect(null, mapDispatchToProps)(SignOut);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport SignIn from '../sign-in/sign-in';\nimport SignOut from '../sign-out/sign-out';\n\nimport {\n  AuthorizationStatus\n} from '../../const.js';\n\nfunction Layout (props) {\n  const {\n    children,\n    login,\n    authorizationStatus,\n    className,\n  } = props;\n\n  return (\n    <div className={className}>\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n                <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                {authorizationStatus === AuthorizationStatus.AUTH\n                  ? <SignOut login={login} />\n                  : < SignIn />}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n      {children}\n    </ div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  login: state.loginValue,\n  places: state.places,\n  sortBy: state.sortBy,\n  authorizationStatus: state.authorizationStatus,\n});\n\nLayout.propTypes = {\n  children: PropTypes.object,\n  login: PropTypes.string,\n  className: PropTypes.string,\n  authorizationStatus: PropTypes.string.isRequired,\n};\n\nexport { Layout };\nexport default connect(mapStateToProps, null)(Layout);\n","import React from 'react';\nimport Layout from '../layout/layout';\n\nconst withLayout = (Component, className) =>\n  function wrapper(props) {\n    return (\n      <Layout className={className}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n\nwithLayout.displayName = 'withLayout';\n\nexport default withLayout;\n","import { useEffect, useState } from 'react';\nimport leaflet from 'leaflet';\nimport {ZOOM} from '../const';\n\nfunction useMap(mapRef, activeCity) {\n  const [map, setMap]  = useState(null);\n\n  useEffect(() => {\n    if (map === null) {\n\n      const instance = leaflet.map(mapRef.current, {\n        center: {\n          lat: activeCity.location.latitude,\n          lng: activeCity.location.longitude,\n        },\n        zoom: ZOOM,\n        zoomControl: false,\n        marker: true,\n      });\n\n      leaflet\n        .tileLayer(\n          'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n          {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n          },\n        )\n        .addTo(instance);\n\n      setMap(instance);\n    } else if (activeCity.location !== undefined) {\n      map.panTo({\n        lat: activeCity.location.latitude,\n        lng: activeCity.location.longitude,\n      });\n    }\n  }, [mapRef, map, activeCity]);\n\n  return map;\n}\n\nexport default useMap;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport leaflet from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport useMap from '../../hooks/use-map';\nimport { URL_MARKER_DEFAULT, URL_MARKER_CURRENT } from '../../const';\n\nfunction Map(props) {\n  const {\n    activeCityName,\n    city,\n    points,\n    selectedPoint,\n  } = props;\n\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, city);\n\n  const defaultCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_DEFAULT,\n    iconSize: [27, 39],\n    iconAnchor: [14, 39],\n  });\n\n  const currentCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_CURRENT,\n    iconSize: [27, 39],\n    iconAnchor: [14, 39],\n  });\n\n  useEffect(() => {\n    if (map) {\n      points.forEach((point) => {\n        leaflet\n          .marker({\n            lat: point.location.latitude,\n            lng: point.location.longitude,\n          }, {\n            icon: (point.id === selectedPoint.id)\n              ? currentCustomIcon\n              : defaultCustomIcon,\n          })\n          .addTo(map);\n      });\n    }\n  }, [map, city, points, selectedPoint, activeCityName, currentCustomIcon, defaultCustomIcon]);\n\n  return (\n    <div\n      style={{ height: '100%' }}\n      ref={mapRef}\n    >\n    </div>\n  );\n}\n\nMap.propTypes = {\n  city: PropTypes.object,\n  activeCityName: PropTypes.string,\n  selectedPoint: PropTypes.object,\n  points: PropTypes.array,\n};\n\nexport default Map ;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n  cityList,\n  SortByValues\n} from '../../const';\nimport { ActionCreator } from '../../store/actions';\n\nfunction Tabs(props) {\n  const { activeCityName, onTabClick } = props;\n\n  return (\n    <div className=\"tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          {cityList.map((city) => (\n            <li className=\"locations__item\" key={city}>\n              <Link\n                data-city={city}\n                className={`locations__item-link tabs__item ${ city === activeCityName && 'tabs__item--active' }`}\n                to=\"#\"\n                onClick={(evt) =>{\n                  evt.preventDefault();\n                  onTabClick(evt.currentTarget.dataset.city);\n                }}\n              >\n                <span>{city}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  activeCityName: state.activeCityName,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabClick(cityName) {\n    dispatch(ActionCreator.changeCity(cityName));\n    dispatch(ActionCreator.changeSortBy(SortByValues.POPULAR));\n  },\n});\n\nTabs.propTypes = {\n  activeCityName: PropTypes.string,\n  onTabClick: PropTypes.func.isRequired,\n};\n\nexport { Tabs };\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);\n","import React, { useState } from 'react';\nimport { SortByValues } from '../../const';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ActionCreator } from '../../store/actions';\n\nfunction SortBy( props ) {\n  const { sortByValue, onSortChange } = props;\n  const [isOpened, setIsOpened] = useState(false);\n\n  const handleOpen = (evt) => {\n    evt.preventDefault();\n    setIsOpened((prevValue) => !prevValue);\n  };\n\n  return (\n    <form\n      className=\"places__sorting\"\n      action=\"#\"\n      method=\"get\"\n      onClick={(evt) => handleOpen(evt)}\n    >\n      <span className=\"places__sorting-caption\">Sort by&nbsp;</span>\n      <span className=\"places__sorting-type\" tabIndex=\"0\">\n        { sortByValue }\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul className={`places__options places__options--custom ${isOpened && 'places__options--opened'}`}>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.POPULAR && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={(evt) =>{\n            evt.preventDefault();\n            if (evt.target.tagName === 'LI') {\n              onSortChange(evt.target.innerText);\n            }\n          }}\n        >\n          { SortByValues.POPULAR }\n        </li>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.PRICE_LOW_TO_HIGH && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={(evt) =>{\n            evt.preventDefault();\n            if (evt.target.tagName === 'LI') {\n              onSortChange(evt.target.innerText);\n            }\n          }}\n        >\n          { SortByValues.PRICE_LOW_TO_HIGH }\n        </li>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.PRICE_HIGH_TO_LOW && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={(evt) =>{\n            evt.preventDefault();\n            if (evt.target.tagName === 'LI') {\n              onSortChange(evt.target.innerText);\n            }\n          }}\n        >\n          { SortByValues.PRICE_HIGH_TO_LOW }\n        </li>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.TOP_RATED_FIRST && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={(evt) =>{\n            evt.preventDefault();\n            if (evt.target.tagName === 'LI') {\n              onSortChange(evt.target.innerText);\n            }\n          }}\n        >\n          { SortByValues.TOP_RATED_FIRST }\n        </li>\n      </ul>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sortByValue: state.sortBy,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSortChange(sortByValue) {\n    dispatch(ActionCreator.changeSortBy(sortByValue));\n  },\n});\n\nSortBy.propTypes = {\n  sortByValue: PropTypes.string.isRequired,\n  onSortChange: PropTypes.func.isRequired,\n};\n\nexport { SortBy };\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBy);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MainEmpty(props) {\n  const { activeCityName } = props;\n\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container cities__places-container--empty container\">\n        <section className=\"cities__no-places\">\n          <div className=\"cities__status-wrapper tabs__content\">\n            <b className=\"cities__status\">No places to stay available</b>\n            <p className=\"cities__status-description\">We could not find any property available at the moment in {activeCityName }</p>\n          </div>\n        </section>\n        <div className=\"cities__right-section\" />\n      </div>\n    </div>\n  );\n}\n\nMainEmpty.propTypes = {\n  activeCityName: PropTypes.string.isRequired,\n};\n\nexport default MainEmpty;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport RoomList from '../room-list/room-list';\nimport withLayout from '../hocs/with-layout';\nimport Map from '../map/map';\nimport Tabs from '../tabs/tabs';\nimport SortBy from '../sort-by/sort-by';\nimport Utils from '../../utils/utils';\nimport MainEmpty from '../main-empty/main-empty';\n\nfunction Main(props) {\n  const { places, activeCityName, sortBy } = props;\n\n  const [selectedPoint, setSelectedPoint] = useState({});\n\n  const filteredPlaces = Utils.getFilteredPlaces(activeCityName, places);\n  const sortedPlaces = Utils.getSortedPlaces(sortBy, filteredPlaces);\n\n  const onListItemHover = (listItem) => {\n    const currentPoint = sortedPlaces.find((place) => place.id === parseInt(listItem.id, 10));\n    setSelectedPoint(currentPoint);\n  };\n\n  return (\n    <main className=\"page__main page__main--index\">\n      <h1 className=\"visually-hidden\">Cities</h1>\n      <Tabs />\n      {\n        sortedPlaces.length === 0\n          ? < MainEmpty activeCityName={activeCityName}/>\n          : (\n            <div className=\"cities\">\n              <div className=\"cities__places-container container\">\n                <section className=\"cities__places places\">\n                  <h2 className=\"visually-hidden\">Places</h2>\n                  <b className=\"places__found\">{sortedPlaces.length} places to stay in {activeCityName}</b>\n                  <SortBy />\n                  < RoomList places={sortedPlaces} onListItemHover={onListItemHover} />\n                </section>\n                <div className=\"cities__right-section\">\n                  <section className=\"cities__map map\">\n                    <Map\n                      activeCityName={activeCityName}\n                      city={sortedPlaces.length !== 0 && sortedPlaces[0].city}\n                      points={sortedPlaces}\n                      selectedPoint={selectedPoint}\n                    />\n                  </section>\n                </div>\n              </div>\n            </div>\n          )\n      }\n    </main>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  activeCityName: state.activeCityName,\n  places: state.places,\n  sortBy: state.sortBy,\n});\n\nMain.propTypes = {\n  places: PropTypes.array,\n  activeCityName: PropTypes.string.isRequired,\n  sortBy: PropTypes.string.isRequired,\n};\n\nconst withLayoutMain = withLayout(Main);\nexport { withLayoutMain };\nexport default connect(mapStateToProps, null)(withLayoutMain);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction FavoritePlace(props) {\n  const { price, title, type } = props;\n\n  return (\n    <article className=\"favorites__card place-card\">\n      <div className=\"favorites__image-wrapper place-card__image-wrapper\">\n        <Link to=\"/\">\n          <img className=\"place-card__image\" src=\"img/apartment-small-03.jpg\" width={150} height={110} alt=\"Place\" />\n        </Link>\n      </div>\n      <div className=\"favorites__card-info place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">€{price}</b>\n            <span className=\"place-card__price-text\">/&nbsp;night</span>\n          </div>\n          <button className=\"place-card__bookmark-button place-card__bookmark-button--active button\" type=\"button\">\n            <svg className=\"place-card__bookmark-icon\" width={18} height={19}>\n              <use xlinkHref=\"#icon-bookmark\" />\n            </svg>\n            <span className=\"visually-hidden\">In bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: '100%' }} />\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to=\"/\">{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n}\n\nFavoritePlace.propTypes = {\n  price: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default FavoritePlace;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FavoritePlace from '../favorite-place/favorite-place';\nimport offerProp from '../room/room.prop.js';\n\nfunction FavoriteCity({ city, favoritePlaces }) {\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <Link className=\"locations__item-link\" to=\"/\">\n            <span>{city}</span>\n          </Link>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        {favoritePlaces.map((place) => <FavoritePlace price={place.price} title={place.title} type={place.type} key={place.id} />)}\n      </div>\n    </li>);\n}\n\nFavoriteCity.propTypes = {\n  city: PropTypes.string.isRequired,\n  favoritePlaces: PropTypes.arrayOf(offerProp).isRequired,\n};\n\nexport default FavoriteCity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FavoriteCity from '../favorite-city/favorite-city';\n\nfunction FavoriteList(props) {\n  const { favoriteList } = props;\n\n  return (\n    <ul className=\"favorites__list\">\n      {[...favoriteList.keys()].map((city) => (<FavoriteCity city={city} favoritePlaces={favoriteList.get(city)} key={city}/>))}\n    </ul>\n  );\n}\n\nFavoriteList.propTypes = {\n  favoriteList: PropTypes.instanceOf(Map),\n};\n\nexport default FavoriteList;\n","import React from 'react';\n\nfunction FavoritesEmpty(props) {\n  return (\n    <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n      <div className=\"page__favorites-container container\">\n        <section className=\"favorites favorites--empty\">\n          <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n          <div className=\"favorites__status-wrapper\">\n            <b className=\"favorites__status\">Nothing yet saved.</b>\n            <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default FavoritesEmpty;\n","import React from 'react';\nimport { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport FavoriteList from '../favorite-list/favorite-list';\nimport FavoritesEmpty from './favorites-empty';\n\nimport offerProp from '../room/room.prop.js';\nimport withLayout from '../hocs/with-layout';\n\nimport Utils from '../../utils/utils';\n\nfunction Favorites(props) {\n  const { places } = props;\n  const favoriteList = Utils.getFavoritePlacesSeparatedByCity(places);\n\n  return (\n    <Fragment>\n      {\n        favoriteList.size === 0\n          ? <FavoritesEmpty />\n          :\n          <main className=\"page__main page__main--favorites\">\n            <div className=\"page__favorites-container container\">\n              <section className=\"favorites\">\n                <h1 className=\"favorites__title\">Saved listing</h1>\n                <FavoriteList favoriteList={favoriteList} />\n              </section>\n            </div>\n          </main>\n      }\n      <footer className=\"footer container\">\n        <Link className=\"footer__logo-link\" to=\"/\">\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={64} height={33} />\n        </Link>\n      </footer>\n    </Fragment>\n  );\n}\n\nFavorites.propTypes = {\n  places: PropTypes.arrayOf(offerProp),\n};\n\nexport default withLayout(Favorites, 'page page--favorites-empty');\n","import React, { useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/api-actions';\nimport {\n  AppRoute,\n  AuthorizationStatus\n} from '../../const.js';\n\nfunction Login ({ onSubmit, authorizationStatus }) {\n  const loginRef = useRef();\n  const passwordRef = useRef();\n\n  const history = useHistory();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onSubmit({\n      login: loginRef.current.value,\n      password: passwordRef.current.value,\n    });\n  };\n\n  useEffect(() => {\n    if (authorizationStatus === AuthorizationStatus.AUTH) {\n      history.push(AppRoute.FAVORITES);\n    }\n  }, [authorizationStatus, history]);\n\n  return (\n    <Fragment>\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\" /></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\" /></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\" /></symbol></svg>\n      </div>\n      <div className=\"page page--gray page--login\">\n        <header className=\"header\">\n          <div className=\"container\">\n            <div className=\"header__wrapper\">\n              <div className=\"header__left\">\n                <Link className=\"header__logo-link\" to=\"/\">\n                  <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={81} height={41} />\n                </Link>\n              </div>\n              <nav className=\"header__nav\">\n                <ul className=\"header__nav-list\">\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </header>\n        <main className=\"page__main page__main--login\">\n          <div className=\"page__login-container container\">\n            <section className=\"login\">\n              <h1 className=\"login__title\">Sign in</h1>\n              <form\n                className=\"login__form form\"\n                action=\"\"\n                method=\"post\"\n                onSubmit={ handleSubmit }\n              >\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <label className=\"visually-hidden\">E-mail</label>\n                  <input\n                    ref={ loginRef }\n                    className=\"login__input form__input\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                  />\n                </div>\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <label className=\"visually-hidden\">Password</label>\n                  <input\n                    ref={ passwordRef }\n                    className=\"login__input form__input\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    required\n                  />\n                </div>\n                <button\n                  className=\"login__submit form__submit button\"\n                  type=\"submit\"\n                >\n                  Sign in\n                </button>\n              </form>\n            </section>\n            <section className=\"locations locations--login locations--current\">\n              <div className=\"locations__item\">\n                <Link className=\"locations__item-link\" to=\"/\">\n                  <span>Amsterdam</span>\n                </Link>\n              </div>\n            </section>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nLogin.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  authorizationStatus: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: state.authorizationStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(authData) {\n    dispatch(login(authData));\n  },\n});\n\nexport { Login };\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PropertyCommentSubmitButton (props) {\n  const {\n    disabled,\n    isSending,\n  } = props;\n\n  return (\n    <button\n      className=\"reviews__submit form__submit button\"\n      type=\"submit\"\n      disabled={ disabled }\n    >\n      { isSending ? 'Sending ...' : 'Submit' }\n    </button>\n  );\n}\nPropertyCommentSubmitButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isSending: PropTypes.bool.isRequired,\n};\n\nexport default PropertyCommentSubmitButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst RatingTitles = {\n  PERFECT: 'perfect',\n  GOOD: 'good',\n  NOT_BAD: 'not bad',\n  BADLY: 'badly',\n  TERRIBLY: 'terribly',\n};\n\nconst RatingCombination = {\n  5: RatingTitles.PERFECT,\n  4: RatingTitles.GOOD,\n  3: RatingTitles.NOT_BAD,\n  2: RatingTitles.BADLY,\n  1: RatingTitles.TERRIBLY,\n};\n\nfunction PropertyRatingStar(props) {\n  const {\n    index,\n    rating,\n  } = props;\n\n  const serialNumber = +index + 1;\n  const isActive = (rating === serialNumber);\n\n  return (\n    <Fragment>\n      <input\n        className={`form__rating-input ${isActive ? 'form__rating-input--active' : ''} visually-hidden`}\n        name=\"rating\"\n        defaultValue={serialNumber}\n        id={ `${serialNumber}-stars` }\n        type=\"radio\"\n        defaultChecked={ false }\n      />\n      <label\n        htmlFor={ `${ serialNumber }-stars` }\n        className=\"reviews__rating-label form__rating-label\"\n        title={ RatingCombination[serialNumber] }\n      >\n        <svg className=\"form__star-image\" width={37} height={33}>\n          <use xlinkHref=\"#icon-star\" />\n        </svg>\n      </label>\n    </Fragment>\n  );\n}\n\nPropertyRatingStar.propTypes = {\n  rating: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default PropertyRatingStar;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  connect,\n  useDispatch\n} from 'react-redux';\n\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\n\nimport { useParams } from 'react-router-dom';\nimport { sendComment } from '../../store/api-actions';\nimport { ActionCreator } from '../../store/actions';\n\nimport PropertyCommentSubmitButton from './property-comment-submit-button';\nimport PropertyRatingStar from './property-rating-star';\n\nimport { MAX_RATING } from '../../const';\nimport Utils from '../../utils/utils';\n\nfunction PropertyCommentForm(props) {\n  const {\n    onSubmit,\n    isCommentSending,\n    isShowCommentErrorMessage,\n    isCommentFormSendedSuccessfully,\n    commentErrorMessage,\n  } = props;\n\n  const MAX_LETTERS_AMOUNT = 300;\n  const MIN_LETTERS_AMOUNT = 50;\n\n  const [commentText, setCommentText] = useState('');\n  const [rating, setRating] = useState(0);\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const isSubmitButtonDisabled =\n    (commentText.length < MIN_LETTERS_AMOUNT)\n    || (commentText.length > MAX_LETTERS_AMOUNT)\n    || (rating === 0);\n\n  const generatedKeys = Utils.generateIdKeys(MAX_RATING);\n\n  const onChangeCommentHandler = (evt) => {\n    setCommentText(evt.target.value);\n  };\n\n  const onChangeRatingHandler = (evt) => {\n    setRating(+evt.target.defaultValue);\n  };\n\n  const onSubmitHandler = (evt) => {\n    evt.preventDefault();\n    onSubmit(id, commentText, rating);\n  };\n\n  useEffect(() => {\n    if (isCommentFormSendedSuccessfully) {\n      setCommentText('');\n      setRating(0);\n    }\n  }, [isCommentSending, isCommentFormSendedSuccessfully]);\n\n  return (\n    <fieldset disabled={ isCommentSending } style={{ border: 'none'}}>\n      <form\n        className=\"reviews__form form\"\n        action=\"\"\n        method=\"post\"\n        onSubmit={ (evt) => { onSubmitHandler(evt); } }\n      >\n        <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n        <div className=\"reviews__rating-form form__rating\" onChange={ onChangeRatingHandler }>\n          { generatedKeys.map((idValue, index) => <PropertyRatingStar key={ idValue } index={ index } rating={rating}/>).reverse() }\n        </div>\n        <Tooltip\n          overlay={ <div style={{ height: 100, width: 200, fontSize: 25, textAlign: 'center' }}>{commentErrorMessage}</div> }\n          placement=\"top\"\n          visible={ isShowCommentErrorMessage }\n          animation=\"zoom\"\n        >\n          <textarea\n            className=\"reviews__textarea form__textarea\"\n            onChange={(evt) => onChangeCommentHandler(evt)}\n            id=\"review\"\n            value={commentText}\n            name=\"review\"\n            placeholder=\"Tell how was your stay, what you like and what can be improved\"\n            onFocus={ () => {\n              if (isShowCommentErrorMessage) {\n                dispatch(ActionCreator.showErrorCommentFormMessage(false));\n              }\n            }}\n          >\n          </textarea>\n        </Tooltip>\n        <div className=\"reviews__button-wrapper\">\n          <p className=\"reviews__help\">\n            To submit review please make sure to set\n            <span className=\"reviews__star\">rating</span>\n            and describe your stay with at least\n            <b className=\"reviews__text-amount\">50 characters</b>.\n          </p>\n          <PropertyCommentSubmitButton\n            disabled={ isSubmitButtonDisabled }\n            isSending={isCommentSending}\n          />\n        </div>\n      </form>\n    </fieldset>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isCommentSending: state.isCommentSending,\n  isShowCommentErrorMessage: state.isShowCommentErrorMessage,\n  isCommentFormSendedSuccessfully: state.isCommentFormSendedSuccessfully,\n  commentErrorMessage: state.commentErrorMessage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(idHotel, text, hotelRating) {\n    dispatch(sendComment(idHotel, text, hotelRating));\n  },\n});\n\nPropertyCommentForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isCommentSending: PropTypes.bool.isRequired,\n  isShowCommentErrorMessage: PropTypes.bool,\n  isCommentFormSendedSuccessfully: PropTypes.bool,\n  commentErrorMessage: PropTypes.string,\n};\n\nexport { PropertyCommentForm };\nexport default connect(mapStateToProps, mapDispatchToProps)(PropertyCommentForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Utils from '../../utils/utils';\n\nfunction PropertyComment ( props ) {\n  const {\n    avatarImgPath,\n    date,\n    text,\n    name,\n    rating,\n  } = props;\n\n  const width = Utils.getWidthByRating(rating);\n\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={ avatarImgPath } width={54} height={54} alt=\"Reviews avatar\" />\n        </div>\n        <span className=\"reviews__user-name\">\n          { name }\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{ width:`${width}%`}}>\n            </span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {text}\n        </p>\n        <time className=\"reviews__time\" dateTime={date}>{Utils.formatDate(date)}</time>\n      </div>\n    </li>\n  );\n}\n\nPropertyComment.propTypes = {\n  avatarImgPath: PropTypes.string,\n  date: PropTypes.string,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  rating: PropTypes.number,\n};\n\nexport default PropertyComment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropertyComment from './property-comment';\nimport Utils from '../../utils/utils';\nimport { MAX_COMMENTS_AMOUNT } from '../../const';\n\nfunction PropertyReviewList (props) {\n  const { reviews } = props;\n  const slicedReviews = reviews.slice(0, MAX_COMMENTS_AMOUNT);\n\n  return (\n    <ul className=\"reviews__list\">\n      {slicedReviews.map((item) =>\n      {\n        const adaptedCommentForClient = Utils.adaptCommentToClient(item);\n\n        return (\n          <PropertyComment\n            key={adaptedCommentForClient.id}\n            avatarImgPath={adaptedCommentForClient.user.avatarUrl}\n            date={adaptedCommentForClient.date}\n            text={adaptedCommentForClient.comment}\n            name={adaptedCommentForClient.user.name}\n            rating={adaptedCommentForClient.rating}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nPropertyReviewList.propTypes = {\n  reviews: PropTypes.array,\n};\n\nexport default PropertyReviewList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PropertyImage (props) {\n  const { imgPath } = props;\n\n  return (\n    <div className=\"property__image-wrapper\">\n      <img className=\"property__image\" src={ imgPath } alt=\"studio\" />\n    </div>\n  );\n}\n\nPropertyImage.propTypes = {\n  imgPath: PropTypes.string,\n};\n\nexport default PropertyImage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropertyImage from './property-image';\nimport Utils from '../../utils/utils';\n\nfunction PropertyImagesList (props) {\n  const { images } = props;\n  const generatedIds = Utils.generateIdKeys(images.length);\n\n  return (\n    <div className=\"property__gallery-container container\">\n      <div className=\"property__gallery\">\n        {images.map((imagePath, index) => <PropertyImage imgPath={imagePath} key={generatedIds[index]} />)}\n      </div>\n    </div>\n  );\n}\n\nPropertyImagesList.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PropertyImagesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PropertyGood (props) {\n  const { good } = props;\n\n  return (\n    <li className=\"property__inside-item\">\n      { good }\n    </li>\n  );\n}\n\nPropertyGood.propTypes = {\n  good: PropTypes.string,\n};\n\nexport default PropertyGood;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropertyGood from './property-good';\nimport Utils from '../../utils/utils';\n\nfunction PropertyGoodsList (props) {\n  const { goods } = props;\n  const generatedIds = Utils.generateIdKeys(goods.length);\n\n  return (\n    <ul className=\"property__inside-list\">\n      {goods.map((good, index) => <PropertyGood good={good} key={generatedIds[index]} />)}\n    </ul>\n  );\n}\n\nPropertyGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PropertyGoodsList;\n","export const neighbourhoodPlaces = [\n  {\n    'id': 1,\n    'price': 220,\n    'bedrooms': 3,\n    'type': 'apartment',\n    'title': 'Beautiful & luxurious studio at great location',\n    'city': {\n      'name': 'Amsterdam',\n      'location': {\n        'latitude': 52.38333,\n        'longitude': 4.9,\n        'zoom': 12,\n      },\n    },\n    'description': 'A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.',\n    'goods': ['Heating', 'Kitchen', 'Cable TV', 'Washing machine', 'Coffee machine', 'Dishwasher'],\n    'host': {\n      'id': 3,\n      'avatar_url': 'img/1.png',\n      'is_pro': true,\n      'name': 'Angelina',\n    },\n    'images': ['img/room.jpg', 'img/room.jpg'],\n    'is_favorite': true,\n    'is_premium': true,\n    'location': {\n      'latitude': 52.3909553943508,\n      'longitude': 4.85309666406198,\n      'zoom': 8,\n    },\n    'max_adults': 4,\n    'preview_image': 'img/room.jpg',\n    'rating': 4.0,\n  },\n  {\n    'id': 2,\n    'price': 120,\n    'bedrooms': 3,\n    'city': {\n      'name': 'Amsterdam',\n      'location': {\n        'latitude': 52.38333,\n        'longitude': 4.9,\n        'zoom': 10,\n      },\n    },\n    'description': 'A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.',\n    'goods': ['Heating', 'Kitchen', 'Cable TV', 'Washing machine', 'Coffee machine', 'Dishwasher'],\n    'host': {\n      'avatar_url': 'img/1.png',\n      'id': 3,\n      'isPro': true,\n      'name': 'Angelina',\n    },\n    'images': ['img/apartment-02.jpg', 'img/apartment-02.jpg'],\n    'is_favorite': true,\n    'is_premium': false,\n    'location': {\n      'latitude': 52.369553943508,\n      'longitude': 4.85309666406198,\n      'zoom': 8,\n    },\n    'max_adults': 4,\n    'preview_image': 'img/apartment-02.jpg',\n    'rating': 4.8,\n    'title': 'Beautiful & luxurious studio at great location',\n    'type': 'apartment',\n  },\n  {\n    'id': 3,\n    'price': 120,\n    'bedrooms': 3,\n    'city': {\n      'location': {\n        'latitude': 52.38333,\n        'longitude': 4.9,\n        'zoom': 10,\n      },\n      'name': 'Amsterdam',\n    },\n    'description': 'A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.',\n    'goods': ['Heating', 'Kitchen', 'Cable TV', 'Washing machine', 'Coffee machine', 'Dishwasher'],\n    'host': {\n      'avatar_url': 'img/1.png',\n      'id': 3,\n      'isPro': true,\n      'name': 'Angelina',\n    },\n    'images': ['img/apartment-03.jpg', 'img/apartment-03.jpg'],\n    'is_favorite': false,\n    'is_premium': false,\n    'location': {\n      'latitude': 52.3909553943508,\n      'longitude': 4.929309666406198,\n      'zoom': 8,\n    },\n    'max_adults': 4,\n    'preview_image': 'img/apartment-03.jpg',\n    'rating': 4.8,\n    'title': 'Beautiful & luxurious studio at great location',\n    'type': 'apartment',\n  },\n];\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  Link,\n  useHistory\n} from 'react-router-dom';\n\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\n\nimport CardInfo from '../card-info/card-info';\nimport Utils from '../../utils/utils';\n\nimport {\n  AuthorizationStatus,\n  AppRoute\n} from '../../const.js';\n\nimport { addToFavorite } from '../../store/api-actions';\n\nfunction PropertyNearPlace(props) {\n  const {\n    id,\n    price,\n    title,\n    isPremium,\n    isFavorite,\n    type,\n    rating,\n    previewImage,\n  } = props;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const width = Utils.getWidthByRating(rating);\n\n  const authorizationStatus = useSelector((state) => state.authorizationStatus);\n\n  const favoriteClickHandler = (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.LOGIN);\n    } else {\n      dispatch(addToFavorite(id, !isFavorite));\n    }\n  };\n\n  return (\n    <article className=\"near-places__card place-card\" id={id}>\n      {isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>}\n      <div className=\"near-places__image-wrapper place-card__image-wrapper\">\n        <Link to={`/hotels/${id}`}>\n          <img\n            className=\"place-card__image\"\n            src={ previewImage }\n            width=\"260\"\n            height=\"200\"\n            alt=\"Place\"\n          />\n        </Link>\n      </div>\n      < CardInfo\n        id={id}\n        price={price}\n        title={title}\n        isFavorite={isFavorite}\n        type={ type }\n        width={ width }\n        favoriteClickHandler={favoriteClickHandler}\n      />\n    </article>\n  );\n}\n\nPropertyNearPlace.propTypes = {\n  id: PropTypes.number.isRequired,\n  price: PropTypes.number,\n  rating: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  isPremium: PropTypes.bool,\n  isFavorite: PropTypes.bool.isRequired,\n  type: PropTypes.string,\n  previewImage: PropTypes.string,\n};\n\nexport default PropertyNearPlace;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Utils from '../../utils/utils';\n\nimport PropertyNearPlace from './property-near-place';\n\nfunction PropertyNearPlacesList(props) {\n  const { nearbyPlaces, commonPlaces } = props;\n\n  const commonPlacesLinksGottenByNearbyPlaces = Utils.getNearbyPlacesFromCommonPlaces(nearbyPlaces, commonPlaces);\n\n  return (\n    <div className=\"near-places__list places__list\">\n      {commonPlacesLinksGottenByNearbyPlaces.map((place) => (\n        <PropertyNearPlace\n          key={place.id}\n          id={place.id}\n          price={place.price}\n          title={place.title}\n          isPremium={place.isPremium}\n          isFavorite={place.isFavorite}\n          type={place.type}\n          previewImage={place.previewImage}\n        />\n      ))}\n    </div>\n  );\n}\n\nPropertyNearPlacesList.propTypes = {\n  nearbyPlaces: PropTypes.array,\n  commonPlaces: PropTypes.array,\n};\n\nexport default PropertyNearPlacesList;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p>Loading...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import React, {\n  useEffect,\n  Fragment\n} from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  Link,\n  useParams,\n  useHistory\n} from 'react-router-dom';\n\nimport PropertyCommentForm from './property-comment-form';\nimport PropertyCommentList from './property-comment-list';\nimport withLayout from '../hocs/with-layout';\nimport PropertyImagesList from './property-images-list';\nimport PropertyGoodsList from './property-goods-list';\nimport { neighbourhoodPlaces } from '../../mock/neighbourhood-places';\nimport PropertyNearPlacesList from './property-near-places-list';\nimport LoadingScreen from '../loading-screen/loading-screen.jsx';\n\nimport {\n  fetchCommentsList,\n  fetchNearbyPlacesList,\n  addToFavorite\n} from '../../store/api-actions';\n\nimport { ActionCreator } from '../../store/actions';\n\nimport {\n  AuthorizationStatus,\n  AppRoute\n} from '../../const.js';\n\nimport Utils from '../../utils/utils';\nimport Map from '../map/map';\n\nfunction Property ( props ) {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const {\n    places,\n    nearbyPlaces,\n    comments,\n    isCommentsLoaded,\n    isNearbyPlacesLoaded,\n    authorizationStatus,\n    favoriteClickHandler,\n  } = props;\n\n  const hotelFromServer = places.find((place) => place.id === +id);\n\n  const adaptedPlaceForClient = hotelFromServer;\n\n  const width = Utils.getWidthByRating(adaptedPlaceForClient.rating);\n\n  useEffect(() => {\n    dispatch(fetchCommentsList(id));\n    dispatch(fetchNearbyPlacesList(id));\n\n    return () => {\n      dispatch(ActionCreator.removeNearbyPlaces());\n      dispatch(ActionCreator.removeComments());\n    };\n  }, [id, dispatch]);\n\n  const onFavoriteClick = (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.LOGIN);\n    } else {\n      favoriteClickHandler(adaptedPlaceForClient.id, !adaptedPlaceForClient.isFavorite);\n    }\n  };\n\n  return (\n    <Fragment>\n      <main className=\"page__main\">\n        <section className=\"property\">\n          < PropertyImagesList images={adaptedPlaceForClient.images} />\n          <div className=\"property__container container\">\n            <div className=\"property__wrapper\">\n              {adaptedPlaceForClient.isPremium && (\n                <div className=\"property__mark\">\n                  <span>Premium</span>\n                </div>)}\n              <div className=\"property__name-wrapper\">\n                <h1 className=\"property__name\">\n                  { adaptedPlaceForClient.description }\n                </h1>\n                <button\n                  className={`property__bookmark-button button ${adaptedPlaceForClient.isFavorite ? 'property__bookmark-button--active' : ''}`}\n                  type=\"button\"\n                  onClick={(evt) => { onFavoriteClick(evt); }}\n                >\n                  <svg className=\"property__bookmark-icon\" width={31} height={33}>\n                    <use xlinkHref=\"#icon-bookmark\" />\n                  </svg>\n                  <span className=\"visually-hidden\">To bookmarks</span>\n                </button>\n              </div>\n              <div className=\"property__rating rating\">\n                <div className=\"property__stars rating__stars\">\n                  <span style={{ width: `${width}%` }} />\n                  <span className=\"visually-hidden\">Rating</span>\n                </div>\n                <span className=\"property__rating-value rating__value\">{ Math.round(adaptedPlaceForClient.rating) }</span>\n              </div>\n              <ul className=\"property__features\">\n                <li className=\"property__feature property__feature--entire\">\n                  {adaptedPlaceForClient.type}\n                </li>\n                <li className=\"property__feature property__feature--bedrooms\">\n                  { adaptedPlaceForClient.bedrooms } Bedrooms\n                </li>\n                <li className=\"property__feature property__feature--adults\">\n                  Max { adaptedPlaceForClient.maxAdults } adults\n                </li>\n              </ul>\n              <div className=\"property__price\">\n                <b className=\"property__price-value\">€{ adaptedPlaceForClient.price }</b>\n                <span className=\"property__price-text\">&nbsp;night</span>\n              </div>\n              <div className=\"property__inside\">\n                <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n                < PropertyGoodsList goods={ adaptedPlaceForClient.goods } />\n              </div>\n              <div className=\"property__host\">\n                <h2 className=\"property__host-title\">Meet the host</h2>\n                <div className=\"property__host-user user\">\n                  <div className={`property__avatar-wrapper ${adaptedPlaceForClient.host.isPro && 'property__avatar-wrapper--pro'} user__avatar-wrapper`}>\n                    <img\n                      className=\"property__avatar user__avatar\"\n                      src={adaptedPlaceForClient.host.avatarUrl}\n                      width={74}\n                      height={74}\n                      alt=\"Host avatar\"\n                    />\n                  </div>\n                  <span className=\"property__user-name\">\n                    { adaptedPlaceForClient.host.name}\n                  </span>\n                  {adaptedPlaceForClient.host.isPro && (\n                    <span className=\"property__user-status\">\n                      Pro\n                    </span>\n                  )}\n                </div>\n                <div className=\"property__description\">\n                  <p className=\"property__text\">\n                    { adaptedPlaceForClient.description }\n                  </p>\n                </div>\n              </div>\n              <section className=\"property__reviews reviews\">\n                {isCommentsLoaded\n                  ?\n                  <Fragment>\n                    <h2 className=\"reviews__title\">Reviews · <span className=\"reviews__amount\">{comments.length}</span></h2>\n                    < PropertyCommentList reviews={comments} />\n                  </Fragment>\n                  : <LoadingScreen />}\n                { authorizationStatus === AuthorizationStatus.AUTH && < PropertyCommentForm />}\n              </section>\n            </div>\n          </div>\n          <section className=\"property__map map\">\n            <Map\n              activeCityName={adaptedPlaceForClient.city.name}\n              city={adaptedPlaceForClient.city}\n              points={neighbourhoodPlaces}\n              selectedPoint={adaptedPlaceForClient}\n            />\n          </section>\n        </section>\n        <div className=\"container\">\n          <section className=\"near-places places\">\n            <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n            { isNearbyPlacesLoaded\n              ? < PropertyNearPlacesList nearbyPlaces={ nearbyPlaces } commonPlaces={places}/>\n              : <LoadingScreen />}\n          </section>\n        </div>\n      </main>\n      <footer className=\"footer container\">\n        <Link className=\"footer__logo-link\" to=\"/\">\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={64} height={33} />\n        </Link>\n      </footer>\n\n    </Fragment>\n  );\n}\n\nProperty.propTypes = {\n  places: PropTypes.array,\n  comments: PropTypes.array,\n  nearbyPlaces: PropTypes.array,\n  isCommentsLoaded: PropTypes.bool.isRequired,\n  isNearbyPlacesLoaded: PropTypes.bool.isRequired,\n  authorizationStatus: PropTypes.string.isRequired,\n  favoriteClickHandler: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  favoriteClickHandler(idPlace, isFavoritePlace) {\n    dispatch(addToFavorite(idPlace, isFavoritePlace));\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  places: state.places,\n  comments: state.comments,\n  nearbyPlaces: state.nearbyPlaces,\n  isCommentsLoaded: state.isCommentsLoaded,\n  isNearbyPlacesLoaded: state.isNearbyPlacesLoaded,\n  authorizationStatus: state.authorizationStatus,\n});\n\nconst withLayoutProperty =  withLayout(Property);\n\nexport { withLayoutProperty };\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayoutProperty);\n\n","import React, { Fragment } from 'react';\n\nfunction Error() {\n  return (\n    < Fragment >\n      <h1>404</h1>\n      <h2>Page Not Found</h2>\n    </ Fragment>\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\n\nfunction PrivateRoute(props) {\n  const { render, path, exact, authorizationStatus } = props;\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.AUTH\n          ? render()\n          : <Redirect to={AppRoute.LOGIN} />\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: state.authorizationStatus,\n});\n\nexport { PrivateRoute };\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Router as BrowserRouter } from 'react-router-dom';\n\nimport {\n  AppRoute,\n  AuthorizationStatus\n} from '../../const.js';\n\nimport Main from '../main/main';\nimport Favorites from '../favorites/favorites';\nimport Login from '../login/login';\nimport Property from '../property/property';\nimport Error from '../error/error';\nimport LoadingScreen from '../loading-screen/loading-screen.jsx';\nimport PrivateRoute from '../private-route/private-route.jsx';\nimport browserHistory from '../../browser-history';\n\nfunction App(props) {\n  const {\n    isDataLoaded,\n    places,\n    authorizationStatus,\n  } = props;\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter history={ browserHistory }>\n      <Switch>\n        <Route exact path={AppRoute.ROOT}>\n          <Main className=\"page page--gray page--index\" />\n        </Route>\n        <Route exact path={AppRoute.LOGIN}>\n          {authorizationStatus === AuthorizationStatus.NO_AUTH || authorizationStatus === AuthorizationStatus.UNKNOWN\n            ? <Login />\n            : <Main className=\"page page--gray page--index\" />}\n        </Route>\n        <PrivateRoute\n          exact\n          path={AppRoute.FAVORITES}\n          render={() => <Favorites places={places} className=\"page\" />}\n        >\n        </PrivateRoute>\n        <Route exact path={AppRoute.HOTELS}>\n          <Property className=\"page\" />\n        </Route>\n        <Route>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nApp.propTypes = {\n  places: PropTypes.array.isRequired,\n  authorizationStatus: PropTypes.string,\n  isDataLoaded: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  places: state.places,\n  authorizationStatus: state.authorizationStatus,\n  isDataLoaded: state.isDataLoaded,\n});\n\nexport { App };\nexport default connect(mapStateToProps, null)(App);\n","import { ActionType } from './actions';\n\nimport {\n  AuthorizationStatus,\n  SortByValues,\n  LoginValue\n} from '../const';\n\nimport Utils from '../utils/utils';\n\nconst initialState = {\n  activeCityName: 'Paris',\n  places: [],\n  comments: [],\n  authorizationStatus: AuthorizationStatus.UNKNOWN,\n  isDataLoaded: false,\n  isCommentsLoaded: false,\n  sortBy: SortByValues.POPULAR,\n  loginValue: LoginValue.UNAUTHORIZED,\n  isNearbyPlacesLoaded: false,\n  commentText: '',\n  commentRating: 0,\n  isCommentSending: false,\n  isShowCommentErrorMessage: false,\n  isCommentFormSendedSuccessfully: null,\n  commentErrorMessage: null,\n  nearbyPlaces: [],\n};\n\nfunction reducer (state = initialState, action) {\n  switch (action.type) {\n    case ActionType.CHANGE_LOADING_COMMENT_PROCESS_STATUS: {\n      return {\n        ...state,\n        isCommentSending: action.payload,\n      };\n    }\n    case ActionType.CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS: {\n      return {\n        ...state,\n        isCommentFormSendedSuccessfully: action.payload,\n      };\n    }\n    case ActionType.SHOW_COMMENT_ERROR_MESSAGE: {\n      return {\n        ...state,\n        isShowCommentErrorMessage: action.payload.isShowErrorMessage,\n        commentErrorMessage: action.payload.errorMessageText,\n      };\n    }\n    case ActionType.CHANGE_CITY: {\n      return {\n        ...state,\n        activeCityName: action.payload,\n      };\n    }\n    case ActionType.CHANGE_SORT_BY: {\n      return {\n        ...state,\n        sortBy: action.payload,\n      };\n    }\n    case ActionType.LOAD_PLACES:\n      return {\n        ...state,\n        places: action.payload,\n        isDataLoaded: true,\n      };\n    case ActionType.LOAD_NEARBY_PLACES:\n      return {\n        ...state,\n        nearbyPlaces: action.payload,\n        isNearbyPlacesLoaded: true,\n      };\n    case ActionType.REMOVE_NEARBY_PLACES:\n      return {\n        ...state,\n        nearbyPlaces: [],\n        isNearbyPlacesLoaded: false,\n      };\n    case ActionType.LOAD_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n        isCommentsLoaded: true,\n      };\n    case ActionType.REMOVE_COMMENTS:\n      return {\n        ...state,\n        comments: [],\n        isCommentsLoaded: false,\n      };\n    case ActionType.CHANGE_AUTHORIZATION_STATUS:\n      return {\n        ...state,\n        authorizationStatus: action.payload,\n      };\n    case ActionType.CHANGE_FAVORITE:\n      return {\n        ...state,\n        places: Utils.getUpdatedPlaces(action.payload.id, state.places, action.payload.newPlace),\n      };\n    case ActionType.CHANGE_LOGIN:\n      return {\n        ...state,\n        loginValue: action.payload,\n      };\n    case ActionType.LOGOUT:\n      return {\n        ...state,\n        authorizationStatus: AuthorizationStatus.NO_AUTH,\n        loginValue: LoginValue.UNAUTHORIZED,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { reducer };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport browserHistory from './browser-history';\n\nimport {\n  getAxiosInstance\n} from './services/api';\n\nimport App from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './store/reducer';\n\nimport {\n  fetchPlacesList\n} from './store/api-actions';\n\nconst api = getAxiosInstance(browserHistory);\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk.withExtraArgument(api)),\n  ),\n);\n\nstore.dispatch(fetchPlacesList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}