{"version":3,"sources":["services/api.js","const.js","store/actions.js","util/util.js","store/api-actions.js","components/card-info/card-info.jsx","store/user/user.js","store/places/places.js","store/comments/comments.js","store/comment/comment.js","store/root-reducer.js","store/user/selectors.js","components/room/room.jsx","components/room/room.prop.js","components/room-list/room-list.jsx","components/sign-in/sign-in.jsx","store/places/selectors.js","components/sign-out/sign-out.jsx","components/layout/layout.jsx","components/hocs/with-layout.jsx","hooks/use-map.jsx","components/map/map.jsx","components/tabs/tabs.jsx","components/sort-by/sort-by.jsx","components/main-empty/main-empty.jsx","components/main/main.jsx","components/favorites/favorite-place.jsx","components/favorites/favorite-city.jsx","components/favorites/favorite-list.jsx","components/favorites/favorites-empty.jsx","components/favorites/favorites.jsx","components/login/login.jsx","components/place/place-comment-submit-button.jsx","components/place/place-rating-star.jsx","store/comment/selectors.js","components/place/place-comment-form.jsx","components/place/place-comment.jsx","components/place/place-comment-list.jsx","components/place/place-favorite-button.jsx","components/place/place-image.jsx","components/place/place-images-list.jsx","components/place/place-good.jsx","components/place/place-goods-list.jsx","components/place/place-near-place.jsx","components/place/place-near-place-list.jsx","components/loading-screen/loading-screen.jsx","store/comments/selectors.js","components/place/place.jsx","components/not-found/not-found.jsx","components/private-route/private-route.jsx","browser-history.js","components/app/app.jsx","store/middlewares/redirect.js","index.js"],"names":["token","localStorage","getItem","AppRoute","cityList","AuthorizationStatus","LoginValue","APIRoute","SortByValues","ActionType","changeLoadingCommentProcessStatus","createAction","isLoading","payload","changeIsCommentSendedSuccessfullyStatus","isCommentSendedSuccessfully","showErrorCommentFormMessage","isShowErrorMessage","errorMessageText","changeCity","cityName","changeSortBy","sortByValue","loadPlaces","places","loadNearbyPlaces","nearbyPlaces","removeNearbyPlaces","loadComments","comments","removeComments","changeAuthorizationStatus","status","changeLogin","login","changeFavorite","id","newPlace","logout","resetFavorites","redirectToRoute","url","Util","offerFromServer","adaptedOfferForClient","Object","assign","host","avatarUrl","avatar_url","isPro","is_pro","isFavorite","is_favorite","isPremium","is_premium","maxAdults","max_adults","previewImage","preview_image","placesFromServer","map","place","adaptToClient","commentFromServer","adaptedCommentForClient","comment","date","rating","user","name","favoritePlaces","Map","forEach","has","city","set","get","push","activeCity","filter","item","listLength","Array","fill","nanoid","Math","round","adaptedPlaceForClient","this","newPlaces","index","findIndex","commonPlaces","nearbyPlacesLinks","nearbyPlace","indexFromCommonPlaces","commonPlace","dispatch","formatDate","dateString","Date","toLocaleDateString","year","month","getSortedPlaces","sortTypeValue","clonedPlaces","slice","sort","firstPlace","secondPlace","price","hotels","_sortByPriceFromHighToLow","_sortByRating","addToFavorite","_getState","api","post","then","info","data","catch","err","CardInfo","props","title","type","width","onFavoriteClick","className","onClick","height","style","stroke","xlinkHref","to","initialState","authorizationStatus","createReducer","builder","addCase","state","action","sortBy","isDataLoaded","activeCityName","isNearbyPlacesLoaded","getUpdatedPlaces","resetFavoriteStates","isCommentsLoaded","isCommentSending","isCommentFormSendedSuccessfully","isShowCommentErrorMessage","commentErrorMessage","NameSpace","combineReducers","getAuthorizationStatus","getLogin","Room","onListItemHover","history","useHistory","useDispatch","useSelector","getWidthByRating","onMouseEnter","evt","currentTarget","src","alt","preventDefault","PropTypes","shape","number","isRequired","string","arrayOf","bool","RoomList","SignIn","getPlaces","getSortBy","getIsDataLoaded","getActiveCityName","getIsNearbyPlacesLoaded","getNearbyPlaces","SignOut","trigger","placement","overlay","fontSize","removeItem","delete","userLogout","Layout","children","withLayout","Component","displayName","useMap","mapRef","useState","setMap","useEffect","instance","leaflet","current","center","lat","location","latitude","lng","longitude","zoom","zoomControl","marker","tileLayer","attribution","addTo","undefined","panTo","points","selectedPoint","useRef","defaultCustomIcon","icon","iconUrl","iconSize","iconAnchor","currentCustomIcon","point","ref","Tabs","handleTabClick","dataset","data-city","SortBy","isOpened","setIsOpened","handleSortChange","target","innerText","method","prevValue","handleOpen","tabIndex","MainEmpty","withLayoutMain","setSelectedPoint","filteredPlaces","getFilteredPlaces","sortedPlaces","length","listItem","currentPoint","find","parseInt","FavoritePlace","FavoriteCity","FavoriteList","favoriteList","keys","FavoritesEmpty","getFavoritePlacesSeparatedByCity","size","Login","loginRef","passwordRef","display","xmlns","viewBox","fillRule","clipRule","d","onSubmit","email","password","setItem","value","placeholder","required","PlaceCommentSubmitButton","disabled","isSending","RatingCombination","5","4","3","2","1","PlaceRatingStar","serialNumber","isActive","defaultValue","defaultChecked","htmlFor","getIsCommentSending","getIsCommentFormSendedSuccessfully","getIsShowCommentErrorMessage","getCommentErrorMessage","PlaceCommentForm","commentText","setCommentText","setRating","useParams","isSubmitButtonDisabled","generatedKeys","generateIdKeys","border","message","sendComment","onChange","reverse","textAlign","visible","animation","onFocus","PlaceComment","avatarImgPath","text","dateTime","PlaceCommentList","slicedReviews","reviews","adaptCommentToClient","PlaceFavoriteButton","PlaceImage","imgPath","PlaceImageList","images","generatedIds","imagePath","memo","prevProps","nextProps","PlaceGood","good","PlaceGoodList","goods","PlaceNearPlace","PlaceNearPlaceList","commonPlacesLinksGottenByNearbyPlaces","getNearbyPlacesFromCommonPlaces","LoadingScreen","getComments","getIsCommentsLoaded","withLayoutPlace","placeItem","nearbyPlacesWithCurrentPlace","fetchCommentsList","adaptedPlacesToClient","adaptPlacesToClient","fetchNearbyPlacesList","description","bedrooms","withLayoutNotFound","margin","PrivateRoute","render","path","exact","browserHistory","createBrowserHistory","App","redirect","_store","next","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","getAxiosInstance","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","getIsTokenExist","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.083cfc05.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nconst token = localStorage.getItem('token') !== null ? localStorage.getItem('token') : '';\n\nexport const getAxiosInstance = () => {\n  const axiosInstance = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'x-token': token,\n    },\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = () => {};\n\n  axiosInstance.interceptors.response.use(onSuccess, onFail);\n\n  return axiosInstance;\n};\n","export const AppRoute = {\n  MAIN: '/',\n  SIGN_IN: '/login',\n  FAVORITES: '/favorites',\n  ROOM: '/offer/:id',\n};\n\nexport const MAX_RATING = 5;\nexport const MAX_PERCENT = 100;\nexport const MAX_COMMENTS_AMOUNT = 10;\n\nexport const ZOOM = 12;\n\nexport const URL_MARKER_DEFAULT = 'img/pin.svg';\n\nexport const URL_MARKER_CURRENT = 'img/pin-active.svg';\n\nexport const cityList = [\n  'Paris',\n  'Cologne',\n  'Brussels',\n  'Amsterdam',\n  'Hamburg',\n  'Dusseldorf',\n];\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n};\n\nexport const LoginValue = {\n  UNAUTHORIZED: 'UNAUTHORIZED',\n};\n\nexport const APIRoute = {\n  HOTELS: '/hotels',\n  FAVORITE: '/favorite',\n  COMMENTS: '/comments',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n};\n\nexport const SortByValues = {\n  POPULAR: 'Popular',\n  PRICE_LOW_TO_HIGH: 'Price: low to high',\n  PRICE_HIGH_TO_LOW: 'Price: high to low',\n  TOP_RATED_FIRST: 'Top rated first',\n};\n","import {createAction} from '@reduxjs/toolkit';\n\nexport const ActionType = {\n  CHANGE_CITY: 'places/changeCity',\n  CHANGE_SORT_BY: 'places/sortBy',\n  LOAD_PLACES: 'places/loadPlaces',\n  LOAD_NEARBY_PLACES: 'places/loadNearbyPlaces',\n  REMOVE_NEARBY_PLACES: 'places/removeNearbyPlaces',\n  CHANGE_FAVORITE: 'places/isFavorite',\n  LOAD_COMMENTS: 'comments/loadComments',\n  REMOVE_COMMENTS: 'comments/removeComments',\n  CHANGE_AUTHORIZATION_STATUS: 'user/changeAuthorizationStatus',\n  CHANGE_LOGIN: 'user/changeLogin',\n  LOGOUT: 'user/logout',\n  CHANGE_LOADING_COMMENT_PROCESS_STATUS: 'comment/changeLoadingCommentProcessStatus',\n  SHOW_COMMENT_ERROR_MESSAGE: 'comment/showErrorCommentFormMessage',\n  SEND_COMMENT: 'comment/sendComment',\n  SEND_COMMENT_RATING: 'comment/sendCommentRating',\n  CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS: 'comment/changeCommentSendedSuccessfulyStatus',\n  RESET_FAVORITES: 'places/resetFavorites',\n  REDIRECT_TO_ROUTE: 'places/redirectToRoute',\n};\n\nexport const changeLoadingCommentProcessStatus = createAction(\n  ActionType.CHANGE_LOADING_COMMENT_PROCESS_STATUS,\n  (isLoading) => ({payload: isLoading}),\n);\n\nexport const changeIsCommentSendedSuccessfullyStatus = createAction(\n  ActionType.CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS,\n  (isCommentSendedSuccessfully) => ({payload: isCommentSendedSuccessfully}),\n);\n\nexport const showErrorCommentFormMessage = createAction(\n  ActionType.SHOW_COMMENT_ERROR_MESSAGE,\n  (isShowErrorMessage, errorMessageText) => ({payload: {isShowErrorMessage, errorMessageText}}),\n);\n\nexport const changeCity = createAction(\n  ActionType.CHANGE_CITY,\n  (cityName) => ({payload: cityName}),\n);\n\nexport const changeSortBy = createAction(\n  ActionType.CHANGE_SORT_BY,\n  (sortByValue) => ({payload: sortByValue}),\n);\n\nexport const loadPlaces = createAction(\n  ActionType.LOAD_PLACES,\n  (places) => ({payload: places}),\n);\n\nexport const loadNearbyPlaces = createAction(\n  ActionType.LOAD_NEARBY_PLACES,\n  (nearbyPlaces) => ({payload: nearbyPlaces}),\n);\n\nexport const removeNearbyPlaces = createAction(ActionType.REMOVE_NEARBY_PLACES);\n\nexport const loadComments = createAction(\n  ActionType.LOAD_COMMENTS,\n  (comments) => ({payload: comments}),\n);\n\nexport const removeComments = createAction(ActionType.REMOVE_COMMENTS);\n\nexport const changeAuthorizationStatus = createAction(\n  ActionType.CHANGE_AUTHORIZATION_STATUS,\n  (status) => ({payload: status}),\n);\n\nexport const changeLogin = createAction(\n  ActionType.CHANGE_LOGIN,\n  (login) => ({payload: login}),\n);\n\nexport const changeFavorite = createAction(\n  ActionType.CHANGE_FAVORITE,\n  (id, newPlace) => ({payload: {id, newPlace}}),\n);\n\nexport const logout = createAction(ActionType.LOGOUT);\n\nexport const resetFavorites = createAction(\n  ActionType.RESET_FAVORITES,\n  (places) => ({payload: places}),\n);\n\nexport const redirectToRoute = createAction(\n  ActionType.REDIRECT_TO_ROUTE,\n  (url) => ({payload: url}),\n);\n","import nanoid from 'nanoid';\n\nimport {\n  MAX_RATING,\n  MAX_PERCENT,\n  SortByValues\n} from '../const';\n\nimport {changeLogin, changeAuthorizationStatus} from '../store/actions';\nimport {AuthorizationStatus} from '../const';\n\nclass Util {\n  static adaptToClient(offerFromServer) {\n    const adaptedOfferForClient = Object.assign(\n      {},\n      offerFromServer,\n      {\n        host: Object.assign(\n          {},\n          offerFromServer.host,\n          {\n            avatarUrl: offerFromServer.host.avatar_url,\n            isPro: offerFromServer.host.is_pro,\n          },\n        ),\n        isFavorite: offerFromServer.is_favorite,\n        isPremium: offerFromServer.is_premium,\n        maxAdults: offerFromServer.max_adults,\n        previewImage: offerFromServer.preview_image,\n      },\n    );\n\n    // Ненужные ключи мы удаляем\n    delete adaptedOfferForClient.host.avatar_url;\n    delete adaptedOfferForClient.host.is_pro;\n\n    delete adaptedOfferForClient.is_favorite;\n    delete adaptedOfferForClient.is_premium;\n    delete adaptedOfferForClient.max_adults;\n    delete adaptedOfferForClient.preview_image;\n\n    return adaptedOfferForClient;\n  }\n\n  static adaptPlacesToClient(placesFromServer) {\n    return placesFromServer.map((place) => this.adaptToClient(place));\n  }\n\n  static adaptCommentToClient(commentFromServer) {\n    const adaptedCommentForClient = Object.assign(\n      {},\n      commentFromServer,\n      {\n        comment: commentFromServer.comment,\n        date: commentFromServer.date,\n        id: commentFromServer.id,\n        rating: commentFromServer.rating,\n        user: Object.assign(\n          {},\n          commentFromServer.user,\n          {\n            avatarUrl: commentFromServer.user.avatar_url,\n            isPro: commentFromServer.user.is_pro,\n            id: commentFromServer.user.id,\n            name: commentFromServer.user.name,\n          },\n        ),\n      },\n    );\n\n    // Ненужные ключи мы удаляем\n    delete adaptedCommentForClient.user.avatar_url;\n    delete adaptedCommentForClient.user.is_pro;\n\n    return adaptedCommentForClient;\n  }\n\n  static getFavoritePlacesSeparatedByCity(places) {\n    const favoritePlaces = new Map();\n\n    places.forEach((place) => {\n      if (place.isFavorite) {\n        if (favoritePlaces.has(place.city.name)) {\n          favoritePlaces.get(place.city.name).push(place);\n        } else {\n          favoritePlaces.set(place.city.name, []);\n          favoritePlaces.get(place.city.name).push(place);\n        }\n      }\n    });\n\n    return favoritePlaces;\n  }\n\n  static getFilteredPlaces(activeCity, places) {\n    let filteredPlaces = [];\n    filteredPlaces = places.filter((item) => item.city.name === activeCity);\n    return filteredPlaces;\n  }\n\n  static formatDate = (dateString) => {\n    const DATE_OPTIONS = {year: 'numeric', month: 'short'};\n\n    return (new Date(dateString)).toLocaleDateString('en-US', DATE_OPTIONS);\n  }\n\n  static generateIdKeys(listLength) {\n    const list = new Array(listLength).fill('');\n    const generatedIdList = list.map(() => nanoid(10));\n    return generatedIdList;\n  }\n\n  static getWidthByRating(rating) {\n    const roundedRating = Math.round(rating);\n    const widthValue = (MAX_PERCENT * roundedRating) / MAX_RATING;\n    return widthValue;\n  }\n\n  static getSortedPlaces = (sortTypeValue, places) => {\n    const clonedPlaces = places.slice();\n\n    const _sortByPriceFromLowToHigh = (hotels) => hotels.sort((firstPlace, secondPlace) => firstPlace.price - secondPlace.price);\n\n    const _sortByPriceFromHighToLow = (hotels) => hotels.sort((firstPlace, secondPlace) => secondPlace.price - firstPlace.price);\n\n    const _sortByRating = (hotels) => hotels.sort((firstPlace, secondPlace) => secondPlace.rating - firstPlace.rating);\n\n    switch (sortTypeValue) {\n      case SortByValues.POPULAR:\n        return clonedPlaces;\n      case SortByValues.PRICE_LOW_TO_HIGH:\n        return _sortByPriceFromLowToHigh(places);\n      case SortByValues.PRICE_HIGH_TO_LOW:\n        return _sortByPriceFromHighToLow(places);\n      case SortByValues.TOP_RATED_FIRST:\n        return _sortByRating(places);\n      default:\n        return clonedPlaces;\n    }\n  }\n\n  static getUpdatedPlaces(id, places, newPlace) {\n    const adaptedPlaceForClient = this.adaptToClient(newPlace);\n    const newPlaces = [...places];\n    const index = newPlaces.findIndex((place) => place.id === id);\n    newPlaces[index].isFavorite = adaptedPlaceForClient.isFavorite;\n    return newPlaces;\n  }\n\n  static getNearbyPlacesFromCommonPlaces(nearbyPlaces, commonPlaces) {\n    const nearbyPlacesLinks = [];\n\n    nearbyPlaces.forEach((nearbyPlace) => {\n      const indexFromCommonPlaces = commonPlaces.findIndex((commonPlace) => commonPlace.id === nearbyPlace.id);\n      nearbyPlacesLinks.push(commonPlaces[indexFromCommonPlaces]);\n    });\n\n    return nearbyPlacesLinks;\n  }\n\n  static resetFavoriteStates(places) {\n    return places.map((place) => {\n      place = {...place, isFavorite: false};\n      return place;\n    });\n  }\n\n  static getIsTokenExist(dispatch) {\n    if (localStorage.getItem('token') !== null) {\n      dispatch(changeLogin(localStorage.getItem('login')));\n      dispatch(changeAuthorizationStatus(AuthorizationStatus.AUTH));\n    }\n  }\n}\n\nexport default Util;\n","import {\n  changeLoadingCommentProcessStatus,\n  changeIsCommentSendedSuccessfullyStatus,\n  showErrorCommentFormMessage,\n  loadPlaces,\n  loadNearbyPlaces,\n  loadComments,\n  changeAuthorizationStatus,\n  changeLogin,\n  changeFavorite,\n  logout as userLogout,\n  redirectToRoute\n} from './actions';\n\nimport {AuthorizationStatus, APIRoute, AppRoute} from '../const';\nimport Util from '../util/util';\n\nexport const fetchPlacesList = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.HOTELS)\n    .then(({data}) => {\n      const adaptedPlacesToClient = Util.adaptPlacesToClient(data);\n      dispatch(loadPlaces(adaptedPlacesToClient));\n    })\n    .catch((err) => {})\n);\n\nexport const fetchNearbyPlacesList = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.HOTELS }/${ id }/nearby`)\n    .then(({data}) => {\n      const adaptedPlacesToClient = Util.adaptPlacesToClient(data);\n      dispatch(loadNearbyPlaces(adaptedPlacesToClient));\n    })\n    .catch((err) => {})\n);\n\nexport const fetchCommentsList = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.COMMENTS }/${id}`)\n    .then((info) => {\n      dispatch(loadComments(info.data));\n    })\n    .catch((err) => {})\n);\n\nexport const addToFavorite = (id, isFavorite) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.FAVORITE }/${id}/${isFavorite ? 1 : 0}`)\n    .then((info) => {\n      dispatch(changeFavorite(id, info.data));\n    })\n    .catch((err) => {})\n);\n\nexport const login = ({login: email, password}) => (dispatch, _getState, api) => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('login');\n  api.post(APIRoute.LOGIN, {email, password})\n    .then((info) => {\n      localStorage.setItem('token', info.data.token);\n      localStorage.setItem('login', info.data.email);\n      dispatch(changeLogin(info.data.email));\n      dispatch(changeAuthorizationStatus(AuthorizationStatus.AUTH));\n      dispatch(redirectToRoute(AppRoute.MAIN));\n    })\n    .catch((err) => {});\n};\n\nexport const sendComment = (id, comment, rating) => (dispatch, _getState, api) => {\n  dispatch(changeLoadingCommentProcessStatus(true));\n\n  api.post(`${APIRoute.COMMENTS}/${id}`, {comment, rating})\n    .then((info) => {\n      dispatch(loadComments(info.data));\n      dispatch(changeLoadingCommentProcessStatus(false));\n      dispatch(showErrorCommentFormMessage(false));\n      dispatch(changeIsCommentSendedSuccessfullyStatus(true));\n      /*\n      this additional bottom line was made for clean up a comment form\n      and establish \"isCommentFormSendedSuccessfully\" to \"false\"\n      to fix problem with save text in comment form after network error\n       */\n      dispatch(changeIsCommentSendedSuccessfullyStatus(false));\n    })\n    .catch((err) => {\n      dispatch(showErrorCommentFormMessage(true, err.message));\n      dispatch(changeLoadingCommentProcessStatus(false));\n      dispatch(changeIsCommentSendedSuccessfullyStatus(false));\n    });\n};\n\nexport const logout = () => (dispatch, _getState, api) => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('login');\n\n  api.delete(APIRoute.LOGOUT)\n    .then(() => {\n      dispatch(userLogout());\n    });\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction CardInfo(props) {\n  const {\n    id,\n    price,\n    title,\n    isFavorite,\n    type,\n    width,\n    onFavoriteClick,\n  } = props;\n\n  return (\n    <div className=\"place-card__info\">\n      <div className=\"place-card__price-wrapper\">\n        <div className=\"place-card__price\">\n          <b className=\"place-card__price-value\">&euro;{price}</b>\n          <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n        </div>\n        <button className=\"place-card__bookmark-button button\" type=\"button\" onClick={onFavoriteClick}>\n          <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\" style={{stroke: isFavorite && '#4481c3', fill: isFavorite && '#4481c3'}}>\n            <use xlinkHref=\"#icon-bookmark\"></use>\n          </svg>\n          <span className=\"visually-hidden\">To bookmarks</span>\n        </button>\n      </div>\n      <div className=\"place-card__rating rating\">\n        <div className=\"place-card__stars rating__stars\">\n          <span style={{width: `${width}%`}}></span>\n          <span className=\"visually-hidden\">Rating</span>\n        </div>\n      </div>\n      <h2 className=\"place-card__name\">\n        <Link to={`/offer/${id}`}>{title}</Link>\n      </h2>\n      <p className=\"place-card__type\">{type}</p>\n    </div>\n  );\n}\n\nCardInfo.propTypes = {\n  id: PropTypes.number,\n  price: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool,\n  type: PropTypes.string,\n  width: PropTypes.number,\n  onFavoriteClick: PropTypes.func,\n};\n\nexport default CardInfo;\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {\n  changeAuthorizationStatus,\n  changeLogin,\n  logout\n} from '../actions';\n\nimport {AuthorizationStatus, LoginValue} from '../../const';\n\nconst initialState = {\n  authorizationStatus: AuthorizationStatus.NO_AUTH,\n  login: LoginValue.UNAUTHORIZED,\n};\n\nconst user = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeAuthorizationStatus, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(changeLogin, (state, action) => {\n      state.login = action.payload;\n    })\n    .addCase(logout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NO_AUTH;\n      state.login = LoginValue.UNAUTHORIZED;\n    });\n});\n\nexport {user};\n","import {createReducer} from '@reduxjs/toolkit';\nimport {SortByValues} from '../../const';\nimport Util from '../../util/util';\n\nimport {\n  changeCity,\n  changeSortBy,\n  loadPlaces,\n  loadNearbyPlaces,\n  removeNearbyPlaces,\n  changeFavorite,\n  resetFavorites\n} from '../actions';\n\nconst initialState = {\n  places: [],\n  sortBy: SortByValues.POPULAR,\n  isDataLoaded: false,\n  activeCityName: 'Paris',\n  isNearbyPlacesLoaded: false,\n  nearbyPlaces: [],\n};\n\nconst places = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeCity, (state, action) => {\n      state.activeCityName = action.payload;\n    })\n    .addCase(changeSortBy, (state, action) => {\n      state.sortBy = action.payload;\n    })\n    .addCase(loadPlaces, (state, action) => {\n      state.places = action.payload;\n      state.isDataLoaded = true;\n    })\n    .addCase(loadNearbyPlaces, (state, action) => {\n      state.nearbyPlaces = action.payload;\n      state.isNearbyPlacesLoaded = true;\n    })\n    .addCase(removeNearbyPlaces, (state) => {\n      state.nearbyPlaces = [];\n      state.isNearbyPlacesLoaded = false;\n    })\n    .addCase(changeFavorite, (state, action) => {\n      state.places = Util.getUpdatedPlaces(action.payload.id, state.places, action.payload.newPlace);\n    })\n    .addCase(resetFavorites, (state, action) => {\n      state.places = Util.resetFavoriteStates(action.payload);\n    });\n});\n\nexport {places};\n","import {createReducer} from '@reduxjs/toolkit';\nimport {loadComments, removeComments} from '../actions';\n\nconst initialState = {\n  comments: [],\n  isCommentsLoaded: false,\n};\n\nconst comments = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadComments, (state, action) => {\n      state.comments = action.payload;\n      state.isCommentsLoaded = true;\n    })\n    .addCase(removeComments, (state) => {\n      state.comments = [];\n      state.isCommentsLoaded = false;\n    });\n});\n\nexport {comments};\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {\n  changeLoadingCommentProcessStatus,\n  changeIsCommentSendedSuccessfullyStatus,\n  showErrorCommentFormMessage\n} from '../actions';\n\nconst initialState = {\n  isCommentSending: false,\n  isCommentFormSendedSuccessfully: null,\n  isShowCommentErrorMessage: false,\n  commentErrorMessage: null,\n};\n\nconst comment = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeLoadingCommentProcessStatus, (state, action) => {\n      state.isCommentSending = action.payload;\n    })\n    .addCase(changeIsCommentSendedSuccessfullyStatus, (state, action) => {\n      state.isCommentFormSendedSuccessfully = action.payload;\n    })\n    .addCase(showErrorCommentFormMessage, (state, action) => {\n      state.isShowCommentErrorMessage = action.payload.isShowErrorMessage;\n      state.commentErrorMessage = action.payload.errorMessageText;\n    });\n});\n\nexport {comment};\n","import {combineReducers} from 'redux';\nimport {user} from './user/user';\nimport {places} from './places/places';\nimport {comments} from './comments/comments';\nimport {comment} from './comment/comment';\n\nexport const NameSpace = {\n  PLACES: 'PLACES',\n  COMMENTS: 'COMMENTS',\n  USER: 'USER',\n  COMMENT: 'COMMENT',\n};\n\nexport default combineReducers({\n  [NameSpace.USER]: user,\n  [NameSpace.PLACES]: places,\n  [NameSpace.COMMENTS]: comments,\n  [NameSpace.COMMENT]: comment,\n});\n","import {NameSpace} from '../root-reducer';\n\nexport const getAuthorizationStatus = (state) => state[NameSpace.USER].authorizationStatus;\nexport const getLogin = (state) => state[NameSpace.USER].login;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {addToFavorite} from '../../store/api-actions';\nimport Util from '../../util/util';\nimport CardInfo from '../card-info/card-info';\nimport {AuthorizationStatus, AppRoute} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction Room(props) {\n  const {\n    id,\n    price,\n    onListItemHover,\n    title,\n    isPremium,\n    isFavorite,\n    type,\n    rating,\n    previewImage,\n  } = props;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const width = Util.getWidthByRating(rating);\n\n  const listItemHoverHandler = (evt) => {\n    onListItemHover(evt.currentTarget);\n  };\n\n  const onFavoriteClick = (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.SIGN_IN);\n    } else {\n      dispatch(addToFavorite(id, !isFavorite));\n    }\n  };\n\n  return (\n    <article\n      className=\"cities__place-card place-card\"\n      onMouseEnter={listItemHoverHandler}\n      id={id}\n    >\n      {isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>}\n      <div className=\"cities__image-wrapper place-card__image-wrapper\">\n        <Link to={`/offer/${ id }`}>\n          <img\n            className=\"place-card__image\"\n            src={previewImage}\n            width=\"260\"\n            height=\"200\"\n            alt=\"Place\"\n          />\n        </Link>\n      </div>\n      <CardInfo\n        id={id}\n        price={price}\n        title={title}\n        isFavorite={isFavorite}\n        type={type}\n        width={width}\n        onFavoriteClick={onFavoriteClick}\n      />\n    </article>\n  );\n}\n\nRoom.propTypes = {\n  id: PropTypes.number.isRequired,\n  price: PropTypes.number,\n  onListItemHover: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  isPremium: PropTypes.bool,\n  isFavorite: PropTypes.bool.isRequired,\n  type: PropTypes.string,\n  previewImage: PropTypes.string,\n  rating: PropTypes.number,\n};\n\nexport default Room;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  'id': PropTypes.number.isRequired,\n  'price': PropTypes.number.isRequired,\n  'bedrooms': PropTypes.number.isRequired,\n  'city': PropTypes.shape({\n    'location': PropTypes.shape({\n      'latitude': PropTypes.number.isRequired,\n      'longitude': PropTypes.number.isRequired,\n      'zoom': PropTypes.number.isRequired,\n    }).isRequired,\n    'name': PropTypes.string.isRequired,\n  }).isRequired,\n  'description': PropTypes.string.isRequired,\n  'goods': PropTypes.arrayOf(PropTypes.string).isRequired,\n  'host': PropTypes.shape({\n    'id': PropTypes.number.isRequired,\n    'avatarUrl': PropTypes.string,\n    'isPro': PropTypes.bool,\n    'name': PropTypes.string.isRequired,\n  }),\n  'images': PropTypes.arrayOf(PropTypes.string).isRequired,\n  'isFavorite': PropTypes.bool,\n  'isPremium': PropTypes.bool,\n  'location': PropTypes.shape({\n    'latitude': PropTypes.number.isRequired,\n    'longitude': PropTypes.number.isRequired,\n    'zoom': PropTypes.number.isRequired,\n  }),\n  'maxAdults': PropTypes.number,\n  'previewImage': PropTypes.string,\n  'rating': PropTypes.number.isRequired,\n  'title': PropTypes.string.isRequired,\n  'type': PropTypes.string.isRequired,\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Room from '../room/room';\nimport placeProp from '../room/room.prop';\n\nfunction RoomList(props) {\n  const {places, onListItemHover} = props;\n\n  return (\n    <div className=\"cities__places-list places__list tabs__content\">\n      {places.map((place) => (\n        <Room\n          key={place.id}\n          id={place.id}\n          price={place.price}\n          onListItemHover={onListItemHover}\n          title={place.title}\n          isPremium={place.isPremium}\n          isFavorite={place.isFavorite}\n          type={place.type}\n          rating={place.rating}\n          previewImage={place.previewImage}\n        />\n      ))}\n    </div>\n  );\n}\n\nRoomList.propTypes = {\n  places: PropTypes.arrayOf(placeProp),\n  onListItemHover: PropTypes.func,\n};\n\nexport default RoomList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {AppRoute} from '../../const';\n\nfunction SignIn(props) {\n\n  return (\n    <li className=\"header__nav-item user\">\n      <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.SIGN_IN}>\n        <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n        </div>\n        <span className=\"header__login\">Sign in</span>\n      </Link>\n    </li>\n  );\n}\n\nexport default SignIn;\n","import {NameSpace} from '../root-reducer';\n\nexport const getPlaces = (state) => state[NameSpace.PLACES].places;\nexport const getSortBy = (state) => state[NameSpace.PLACES].sortBy;\nexport const getIsDataLoaded = (state) => state[NameSpace.PLACES].isDataLoaded;\nexport const getActiveCityName = (state) => state[NameSpace.PLACES].activeCityName;\nexport const getIsNearbyPlacesLoaded = (state) => state[NameSpace.PLACES].isNearbyPlacesLoaded;\nexport const getNearbyPlaces = (state) => state[NameSpace.PLACES].nearbyPlaces;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Tooltip from 'rc-tooltip';\n\nimport {AppRoute} from '../../const';\nimport {resetFavorites} from '../../store/actions';\nimport {getPlaces} from '../../store/places/selectors';\nimport {logout} from '../../store/api-actions';\n\nfunction SignOut(props) {\n  const {login} = props;\n  const places = useSelector(getPlaces);\n\n  const dispatch = useDispatch();\n  const handleLogOutButtonClick = () => {\n    dispatch(logout());\n    dispatch(resetFavorites(places));\n  };\n\n  return (\n    <Fragment>\n      <Tooltip\n        trigger={['hover']}\n        placement='bottom'\n        overlay={<div style={{height: 60, width: 150, fontSize: 20}}>Click to show up favorites</div>}\n      >\n        <li className=\"header__nav-item user\">\n          <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.FAVORITES}>\n            <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n            </div>\n            <span className=\"header__user-name user__name\">{login}</span>\n          </Link>\n        </li>\n      </ Tooltip>\n      <li className=\"header__nav-item\">\n        <Link\n          className=\"header__nav-link\"\n          to={AppRoute.MAIN}\n          onClick={handleLogOutButtonClick}\n        >\n          <span className=\"header__signout\">Sign out</span>\n        </Link>\n      </li>\n    </ Fragment>\n  );\n}\n\nSignOut.propTypes = {\n  login: PropTypes.string,\n};\n\nexport default SignOut;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport SignIn from '../sign-in/sign-in';\nimport SignOut from '../sign-out/sign-out';\nimport {AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus, getLogin} from '../../store/user/selectors';\n\nfunction Layout(props) {\n  const {children, className} = props;\n  const login = useSelector(getLogin);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <div className={className}>\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n                <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                {authorizationStatus === AuthorizationStatus.AUTH\n                  ? <SignOut login={login} />\n                  : <SignIn/>}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n      {children}\n    </ div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Layout;\n","import React from 'react';\nimport Layout from '../layout/layout';\n\nconst withLayout = (Component, className) =>\n  function wrapper(props) {\n    return (\n      <Layout className={className}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n\nwithLayout.displayName = 'withLayout';\n\nexport default withLayout;\n","import {useEffect, useState} from 'react';\nimport leaflet from 'leaflet';\nimport {ZOOM} from '../const';\n\nfunction useMap(mapRef, activeCity) {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map === null) {\n\n      const instance = leaflet.map(mapRef.current, {\n        center: {\n          lat: activeCity.location.latitude,\n          lng: activeCity.location.longitude,\n        },\n        zoom: ZOOM,\n        zoomControl: false,\n        marker: true,\n      });\n\n      leaflet\n        .tileLayer(\n          'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n          {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n          },\n        )\n        .addTo(instance);\n\n      setMap(instance);\n    } else if (activeCity.location !== undefined) {\n      map.panTo({\n        lat: activeCity.location.latitude,\n        lng: activeCity.location.longitude,\n      });\n    }\n  }, [mapRef, map, activeCity]);\n\n  return map;\n}\n\nexport default useMap;\n","import React, {useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport leaflet from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport useMap from '../../hooks/use-map';\nimport {URL_MARKER_DEFAULT, URL_MARKER_CURRENT} from '../../const';\n\nfunction Map(props) {\n  const {\n    activeCityName,\n    city,\n    points,\n    selectedPoint,\n  } = props;\n\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, city);\n\n  const defaultCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_DEFAULT,\n    iconSize: [27, 39],\n    iconAnchor: [14, 39],\n  });\n\n  const currentCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_CURRENT,\n    iconSize: [27, 39],\n    iconAnchor: [14, 39],\n  });\n\n  useEffect(() => {\n    if (map) {\n      points.forEach((point) => {\n        leaflet\n          .marker({\n            lat: point.location.latitude,\n            lng: point.location.longitude,\n          }, {\n            icon: (point.id === selectedPoint.id)\n              ? currentCustomIcon\n              : defaultCustomIcon,\n          })\n          .addTo(map);\n      });\n    }\n  }, [map, city, points, selectedPoint, activeCityName, currentCustomIcon, defaultCustomIcon]);\n\n  return (\n    <div\n      style={{height: '100%'}}\n      ref={mapRef}\n    >\n    </div>\n  );\n}\n\nMap.propTypes = {\n  city: PropTypes.object,\n  activeCityName: PropTypes.string,\n  selectedPoint: PropTypes.object,\n  points: PropTypes.array,\n};\n\nexport default Map;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {cityList, SortByValues} from '../../const';\nimport {changeCity} from '../../store/actions';\nimport {changeSortBy} from '../../store/actions';\nimport {getActiveCityName} from '../../store/places/selectors';\n\nfunction Tabs(props) {\n  const activeCityName = useSelector(getActiveCityName);\n  const dispatch = useDispatch();\n\n  const handleTabClick = (evt) => {\n    evt.preventDefault();\n    dispatch(changeCity(evt.currentTarget.dataset.city));\n    dispatch(changeSortBy(SortByValues.POPULAR));\n  };\n\n  return (\n    <div className=\"tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          {cityList.map((city) => (\n            <li className=\"locations__item\" key={city}>\n              <Link\n                data-city={city}\n                className={`locations__item-link tabs__item ${ city === activeCityName && 'tabs__item--active' }`}\n                to=\"#\"\n                onClick={handleTabClick}\n              >\n                <span>{city}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {SortByValues} from '../../const';\nimport {changeSortBy} from '../../store/actions';\nimport {getSortBy} from '../../store/places/selectors';\n\nfunction SortBy(props) {\n  const [isOpened, setIsOpened] = useState(false);\n  const sortByValue = useSelector(getSortBy);\n  const dispatch = useDispatch();\n\n  const handleOpen = (evt) => {\n    evt.preventDefault();\n    setIsOpened((prevValue) => !prevValue);\n  };\n\n  const handleSortChange = (evt) => {\n    dispatch(changeSortBy(evt.target.innerText));\n  };\n\n  return (\n    <form\n      className=\"places__sorting\"\n      action=\"#\"\n      method=\"get\"\n      onClick={(evt) => handleOpen(evt)}\n    >\n      <span className=\"places__sorting-caption\">Sort by&nbsp;</span>\n      <span className=\"places__sorting-type\" tabIndex=\"0\">\n        {sortByValue}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul className={`places__options places__options--custom ${ isOpened && 'places__options--opened' }`}>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.POPULAR && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={handleSortChange}\n        >\n          {SortByValues.POPULAR}\n        </li>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.PRICE_LOW_TO_HIGH && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={handleSortChange}\n        >\n          {SortByValues.PRICE_LOW_TO_HIGH}\n        </li>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.PRICE_HIGH_TO_LOW && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={handleSortChange}\n        >\n          {SortByValues.PRICE_HIGH_TO_LOW}\n        </li>\n        <li\n          className={`places__option ${ sortByValue === SortByValues.TOP_RATED_FIRST && 'places__option--active' }`}\n          tabIndex=\"0\"\n          onClick={handleSortChange}\n        >\n          {SortByValues.TOP_RATED_FIRST}\n        </li>\n      </ul>\n    </form>\n  );\n}\n\nexport default SortBy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MainEmpty(props) {\n  const {activeCityName} = props;\n\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container cities__places-container--empty container\">\n        <section className=\"cities__no-places\">\n          <div className=\"cities__status-wrapper tabs__content\">\n            <b className=\"cities__status\">No places to stay available</b>\n            <p className=\"cities__status-description\">We could not find any property available at the moment in {activeCityName}</p>\n          </div>\n        </section>\n        <div className=\"cities__right-section\" />\n      </div>\n    </div>\n  );\n}\n\nMainEmpty.propTypes = {\n  activeCityName: PropTypes.string.isRequired,\n};\n\nexport default MainEmpty;\n","import React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport RoomList from '../room-list/room-list';\nimport withLayout from '../hocs/with-layout';\nimport Map from '../map/map';\nimport Tabs from '../tabs/tabs';\nimport SortBy from '../sort-by/sort-by';\nimport Util from '../../util/util';\nimport MainEmpty from '../main-empty/main-empty';\nimport {getPlaces, getSortBy, getActiveCityName} from '../../store/places/selectors';\n\nfunction Main() {\n  const [selectedPoint, setSelectedPoint] = useState({});\n\n  const activeCityName = useSelector(getActiveCityName);\n  const places = useSelector(getPlaces);\n  const sortBy = useSelector(getSortBy);\n\n  const filteredPlaces = Util.getFilteredPlaces(activeCityName, places);\n  const sortedPlaces = Util.getSortedPlaces(sortBy, filteredPlaces);\n\n  const onListItemHover = (listItem) => {\n    const currentPoint = sortedPlaces.find((place) => place.id === parseInt(listItem.id, 10));\n    setSelectedPoint(currentPoint);\n  };\n\n  return (\n    <main className=\"page__main page__main--index\">\n      <h1 className=\"visually-hidden\">Cities</h1>\n      <Tabs />\n      {\n        sortedPlaces.length === 0\n          ? <MainEmpty activeCityName={activeCityName}/>\n          : (\n            <div className=\"cities\">\n              <div className=\"cities__places-container container\">\n                <section className=\"cities__places places\">\n                  <h2 className=\"visually-hidden\">Places</h2>\n                  <b className=\"places__found\">{sortedPlaces.length} places to stay in {activeCityName}</b>\n                  <SortBy />\n                  <RoomList places={sortedPlaces} onListItemHover={onListItemHover}/>\n                </section>\n                <div className=\"cities__right-section\">\n                  <section className=\"cities__map map\">\n                    <Map\n                      activeCityName={activeCityName}\n                      city={sortedPlaces.length !== 0 && sortedPlaces[0].city}\n                      points={sortedPlaces}\n                      selectedPoint={selectedPoint}\n                    />\n                  </section>\n                </div>\n              </div>\n            </div>\n          )\n      }\n    </main>\n  );\n}\n\nconst withLayoutMain = withLayout(Main);\nexport default withLayoutMain;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from 'react-redux';\nimport {addToFavorite} from '../../store/api-actions';\n\nfunction FavoritePlace(props) {\n  const {\n    id,\n    price,\n    title,\n    type,\n    isFavorite,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const handleFavoriteChange = (evt) => {\n    dispatch(addToFavorite(id, !isFavorite));\n  };\n\n  return (\n    <article className=\"favorites__card place-card\">\n      <div className=\"favorites__image-wrapper place-card__image-wrapper\">\n        <Link to={`/offer/${ id }`}>\n          <img className=\"place-card__image\" src=\"img/apartment-small-03.jpg\" width={150} height={110} alt=\"Place\" />\n        </Link>\n      </div>\n      <div className=\"favorites__card-info place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">€{price}</b>\n            <span className=\"place-card__price-text\">/&nbsp;night</span>\n          </div>\n          <button className=\"place-card__bookmark-button place-card__bookmark-button--active button\" type=\"button\" onClick={handleFavoriteChange}>\n            <svg className=\"place-card__bookmark-icon\" width={18} height={19}>\n              <use xlinkHref=\"#icon-bookmark\" />\n            </svg>\n            <span className=\"visually-hidden\">In bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: '100%'}} />\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to=\"/\">{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n}\n\nFavoritePlace.propTypes = {\n  id: PropTypes.number.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  price: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default FavoritePlace;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FavoritePlace from './favorite-place';\nimport offerProp from '../room/room.prop';\n\nfunction FavoriteCity(props) {\n  const {city, favoritePlaces} = props;\n\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <Link className=\"locations__item-link\" to=\"/\">\n            <span>{city}</span>\n          </Link>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        {favoritePlaces.map(({id, isFavorite, price, title, type}) => (\n          <FavoritePlace\n            id={id}\n            isFavorite={isFavorite}\n            price={price}\n            title={title}\n            type={type}\n            key={id}\n          />))}\n      </div>\n    </li>);\n}\n\nFavoriteCity.propTypes = {\n  city: PropTypes.string.isRequired,\n  favoritePlaces: PropTypes.arrayOf(offerProp).isRequired,\n};\n\nexport default FavoriteCity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FavoriteCity from './favorite-city';\n\nfunction FavoriteList(props) {\n  const {favoriteList} = props;\n\n  return (\n    <ul className=\"favorites__list\">\n      {[...favoriteList.keys()].map((city) => (<FavoriteCity city={city} favoritePlaces={favoriteList.get(city)} key={city} />))}\n    </ul>\n  );\n}\n\nFavoriteList.propTypes = {\n  favoriteList: PropTypes.instanceOf(Map),\n};\n\nexport default FavoriteList;\n","import React from 'react';\n\nfunction FavoritesEmpty(props) {\n  return (\n    <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n      <div className=\"page__favorites-container container\">\n        <section className=\"favorites favorites--empty\">\n          <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n          <div className=\"favorites__status-wrapper\">\n            <b className=\"favorites__status\">Nothing yet saved.</b>\n            <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default FavoritesEmpty;\n","import React from 'react';\nimport {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport FavoriteList from './favorite-list';\nimport FavoritesEmpty from './favorites-empty';\nimport offerProp from '../room/room.prop';\nimport withLayout from '../hocs/with-layout';\nimport Util from '../../util/util';\n\nfunction Favorites(props) {\n  const {places} = props;\n  const favoriteList = Util.getFavoritePlacesSeparatedByCity(places);\n\n  return (\n    <Fragment>\n      {\n        favoriteList.size === 0\n          ? <FavoritesEmpty />\n          :\n          <main className=\"page__main page__main--favorites\">\n            <div className=\"page__favorites-container container\">\n              <section className=\"favorites\">\n                <h1 className=\"favorites__title\">Saved listing</h1>\n                <FavoriteList favoriteList={favoriteList} />\n              </section>\n            </div>\n          </main>\n      }\n      <footer className=\"footer container\">\n        <Link className=\"footer__logo-link\" to=\"/\">\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={64} height={33} />\n        </Link>\n      </footer>\n    </Fragment>\n  );\n}\n\nFavorites.propTypes = {\n  places: PropTypes.arrayOf(offerProp),\n};\n\nexport default withLayout(Favorites, 'page page--favorites-empty');\n","import React, {useRef} from 'react';\nimport {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\n\nimport {login} from '../../store/api-actions';\n\nfunction Login() {\n  const loginRef = useRef();\n  const passwordRef = useRef();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    dispatch(login({\n      login: loginRef.current.value,\n      password: passwordRef.current.value,\n    }));\n  };\n\n  return (\n    <Fragment>\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\" /></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\" /></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\" /></symbol></svg>\n      </div>\n      <div className=\"page page--gray page--login\">\n        <header className=\"header\">\n          <div className=\"container\">\n            <div className=\"header__wrapper\">\n              <div className=\"header__left\">\n                <Link className=\"header__logo-link\" to=\"/\">\n                  <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={81} height={41} />\n                </Link>\n              </div>\n              <nav className=\"header__nav\">\n                <ul className=\"header__nav-list\">\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </header>\n        <main className=\"page__main page__main--login\">\n          <div className=\"page__login-container container\">\n            <section className=\"login\">\n              <h1 className=\"login__title\">Sign in</h1>\n              <form\n                className=\"login__form form\"\n                action=\"\"\n                method=\"post\"\n                onSubmit={handleSubmit}\n              >\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <label className=\"visually-hidden\">E-mail</label>\n                  <input\n                    ref={loginRef}\n                    className=\"login__input form__input\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                  />\n                </div>\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <label className=\"visually-hidden\">Password</label>\n                  <input\n                    ref={passwordRef}\n                    className=\"login__input form__input\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    required\n                  />\n                </div>\n                <button\n                  className=\"login__submit form__submit button\"\n                  type=\"submit\"\n                >\n                  Sign in\n                </button>\n              </form>\n            </section>\n            <section className=\"locations locations--login locations--current\">\n              <div className=\"locations__item\">\n                <Link className=\"locations__item-link\" to=\"/\">\n                  <span>Amsterdam</span>\n                </Link>\n              </div>\n            </section>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlaceCommentSubmitButton(props) {\n  const {disabled, isSending} = props;\n\n  return (\n    <button\n      className=\"reviews__submit form__submit button\"\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {isSending ? 'Sending ...' : 'Submit'}\n    </button>\n  );\n}\nPlaceCommentSubmitButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isSending: PropTypes.bool.isRequired,\n};\n\nexport default PlaceCommentSubmitButton;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nconst RatingTitles = {\n  PERFECT: 'perfect',\n  GOOD: 'good',\n  NOT_BAD: 'not bad',\n  BADLY: 'badly',\n  TERRIBLY: 'terribly',\n};\n\nconst RatingCombination = {\n  5: RatingTitles.PERFECT,\n  4: RatingTitles.GOOD,\n  3: RatingTitles.NOT_BAD,\n  2: RatingTitles.BADLY,\n  1: RatingTitles.TERRIBLY,\n};\n\nfunction PlaceRatingStar(props) {\n  const {\n    index,\n    rating,\n  } = props;\n\n  const serialNumber = +index + 1;\n  const isActive = (rating === serialNumber);\n\n  return (\n    <Fragment>\n      <input\n        className={`form__rating-input ${ isActive ? 'form__rating-input--active' : '' } visually-hidden`}\n        name=\"rating\"\n        defaultValue={serialNumber}\n        id={`${ serialNumber }-stars`}\n        type=\"radio\"\n        defaultChecked={false}\n      />\n      <label\n        htmlFor={`${ serialNumber }-stars`}\n        className=\"reviews__rating-label form__rating-label\"\n        title={RatingCombination[serialNumber]}\n      >\n        <svg className=\"form__star-image\" width={37} height={33}>\n          <use xlinkHref=\"#icon-star\" />\n        </svg>\n      </label>\n    </Fragment>\n  );\n}\n\nPlaceRatingStar.propTypes = {\n  rating: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default PlaceRatingStar;\n","import {NameSpace} from '../root-reducer';\n\nexport const getIsCommentSending = (state) => state[NameSpace.COMMENT].isCommentSending;\nexport const getIsCommentFormSendedSuccessfully = (state) => state[NameSpace.COMMENT].isCommentFormSendedSuccessfully;\nexport const getIsShowCommentErrorMessage = (state) => state[NameSpace.COMMENT].isShowCommentErrorMessage;\nexport const getCommentErrorMessage = (state) => state[NameSpace.COMMENT].commentErrorMessage;\n","import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport {useParams} from 'react-router-dom';\n\nimport {sendComment} from '../../store/api-actions';\nimport {showErrorCommentFormMessage} from '../../store/actions';\nimport PlaceCommentSubmitButton from './place-comment-submit-button';\nimport PlaceRatingStar from './place-rating-star';\nimport {MAX_RATING} from '../../const';\nimport Util from '../../util/util';\n\nimport {\n  getIsCommentSending,\n  getIsCommentFormSendedSuccessfully,\n  getIsShowCommentErrorMessage,\n  getCommentErrorMessage\n} from '../../store/comment/selectors';\n\nfunction PlaceCommentForm(props) {\n  const isCommentSending = useSelector(getIsCommentSending);\n  const isShowCommentErrorMessage = useSelector(getIsShowCommentErrorMessage);\n  const isCommentFormSendedSuccessfully = useSelector(getIsCommentFormSendedSuccessfully);\n  const commentErrorMessage = useSelector(getCommentErrorMessage);\n\n  const MAX_LETTERS_AMOUNT = 300;\n  const MIN_LETTERS_AMOUNT = 50;\n\n  const [commentText, setCommentText] = useState('');\n  const [rating, setRating] = useState(0);\n  const dispatch = useDispatch();\n\n  const {id} = useParams();\n\n  const isSubmitButtonDisabled =\n    (commentText.length < MIN_LETTERS_AMOUNT)\n    || (commentText.length > MAX_LETTERS_AMOUNT)\n    || (rating === 0);\n\n  const generatedKeys = Util.generateIdKeys(MAX_RATING);\n\n  const handleChangeComment = (evt) => {\n    setCommentText(evt.target.value);\n  };\n\n  const handleChangeRating = (evt) => {\n    setRating(+evt.target.defaultValue);\n  };\n\n  const handleFocusChange = () => {\n    if (isShowCommentErrorMessage) {\n      dispatch(showErrorCommentFormMessage(false));\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    dispatch(sendComment(id, commentText, rating));\n  };\n\n  useEffect(() => {\n    if (isCommentFormSendedSuccessfully) {\n      setCommentText('');\n      setRating(0);\n    }\n  }, [isCommentSending, isCommentFormSendedSuccessfully]);\n\n  return (\n    <fieldset disabled={isCommentSending} style={{border: 'none'}}>\n      <form\n        className=\"reviews__form form\"\n        action=\"\"\n        method=\"post\"\n        onSubmit={handleSubmit}\n      >\n        <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n        <div className=\"reviews__rating-form form__rating\" onChange={handleChangeRating}>\n          {generatedKeys.map((item, index) => <PlaceRatingStar key={item} index={index} rating={rating} />).reverse()}\n        </div>\n        <Tooltip\n          overlay={<div style={{height: 100, width: 200, fontSize: 25, textAlign: 'center'}}>{commentErrorMessage}</div>}\n          placement=\"top\"\n          visible={isShowCommentErrorMessage}\n          animation=\"zoom\"\n        >\n          <textarea\n            className=\"reviews__textarea form__textarea\"\n            onChange={handleChangeComment}\n            id=\"review\"\n            value={commentText}\n            name=\"review\"\n            placeholder=\"Tell how was your stay, what you like and what can be improved\"\n            onFocus={handleFocusChange}\n          >\n          </textarea>\n        </Tooltip>\n        <div className=\"reviews__button-wrapper\">\n          <p className=\"reviews__help\">\n            To submit review please make sure to set\n            <span className=\"reviews__star\">rating</span>\n            and describe your stay with at least\n            <b className=\"reviews__text-amount\">50 characters</b>.\n          </p>\n          <PlaceCommentSubmitButton\n            disabled={isSubmitButtonDisabled}\n            isSending={isCommentSending}\n          />\n        </div>\n      </form>\n    </fieldset>\n  );\n}\n\nexport default PlaceCommentForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Util from '../../util/util';\n\nfunction PlaceComment(props) {\n  const {\n    avatarImgPath,\n    date,\n    text,\n    name,\n    rating,\n  } = props;\n\n  const width = Util.getWidthByRating(rating);\n\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={avatarImgPath} width={54} height={54} alt=\"Reviews avatar\" />\n        </div>\n        <span className=\"reviews__user-name\">\n          {name}\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{width: `${ width }%`}}>\n            </span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {text}\n        </p>\n        <time className=\"reviews__time\" dateTime={date}>{Util.formatDate(date)}</time>\n      </div>\n    </li>\n  );\n}\n\nPlaceComment.propTypes = {\n  avatarImgPath: PropTypes.string,\n  date: PropTypes.string,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  rating: PropTypes.number,\n};\n\nexport default PlaceComment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlaceComment from './place-comment';\nimport Util from '../../util/util';\nimport {MAX_COMMENTS_AMOUNT} from '../../const';\n\nfunction PlaceCommentList(props) {\n  const {reviews} = props;\n  const slicedReviews = reviews.slice(0, MAX_COMMENTS_AMOUNT);\n\n  return (\n    <ul className=\"reviews__list\">\n      {slicedReviews.map((item) => {\n        const adaptedCommentForClient = Util.adaptCommentToClient(item);\n\n        return (\n          <PlaceComment\n            key={adaptedCommentForClient.id}\n            avatarImgPath={adaptedCommentForClient.user.avatarUrl}\n            date={adaptedCommentForClient.date}\n            text={adaptedCommentForClient.comment}\n            name={adaptedCommentForClient.user.name}\n            rating={adaptedCommentForClient.rating}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nPlaceCommentList.propTypes = {\n  reviews: PropTypes.array,\n};\n\nexport default PlaceCommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlaceFavoriteButton(props) {\n  const {place, onClick} = props;\n\n  return (\n    <button\n      className={`property__bookmark-button button ${ place.isFavorite ? 'property__bookmark-button--active' : '' }`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      <svg className=\"property__bookmark-icon\" width={31} height={33}>\n        <use xlinkHref=\"#icon-bookmark\" />\n      </svg>\n      <span className=\"visually-hidden\">To bookmarks</span>\n    </button>\n  );\n}\n\nPlaceFavoriteButton.propTypes = {\n  place: PropTypes.object,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default PlaceFavoriteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlaceImage(props) {\n  const {imgPath} = props;\n\n  return (\n    <div className=\"property__image-wrapper\">\n      <img className=\"property__image\" src={imgPath} alt=\"studio\" />\n    </div>\n  );\n}\n\nPlaceImage.propTypes = {\n  imgPath: PropTypes.string,\n};\n\nexport default PlaceImage;\n","import React, {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport PlaceImage from './place-image';\nimport Util from '../../util/util';\n\nfunction PlaceImageList(props) {\n  const {images} = props;\n  const generatedIds = Util.generateIdKeys(images.length);\n\n  return (\n    <div className=\"property__gallery-container container\">\n      <div className=\"property__gallery\">\n        {images.map((imagePath, index) => <PlaceImage imgPath={imagePath} key={generatedIds[index]} />)}\n      </div>\n    </div>\n  );\n}\n\nPlaceImageList.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default memo(PlaceImageList, (prevProps, nextProps) => prevProps.images === nextProps.images);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlaceGood(props) {\n  const {good} = props;\n\n  return (\n    <li className=\"property__inside-item\">\n      {good}\n    </li>\n  );\n}\n\nPlaceGood.propTypes = {\n  good: PropTypes.string,\n};\n\nexport default PlaceGood;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlaceGood from './place-good';\nimport Util from '../../util/util';\n\nfunction PlaceGoodList(props) {\n  const {goods} = props;\n  const generatedIds = Util.generateIdKeys(goods.length);\n\n  return (\n    <ul className=\"property__inside-list\">\n      {goods.map((good, index) => <PlaceGood good={good} key={generatedIds[index]} />)}\n    </ul>\n  );\n}\n\nPlaceGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PlaceGoodList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport CardInfo from '../card-info/card-info';\nimport Util from '../../util/util';\nimport {AuthorizationStatus, AppRoute} from '../../const';\nimport {addToFavorite} from '../../store/api-actions';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction PlaceNearPlace(props) {\n  const {\n    id,\n    price,\n    title,\n    isPremium,\n    isFavorite,\n    type,\n    rating,\n    previewImage,\n  } = props;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const width = Util.getWidthByRating(rating);\n\n  const onFavoriteClick = (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.SIGN_IN);\n    } else {\n      dispatch(addToFavorite(id, !isFavorite));\n    }\n  };\n\n  return (\n    <article className=\"near-places__card place-card\" id={id}>\n      {isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>}\n      <div className=\"near-places__image-wrapper place-card__image-wrapper\">\n        <Link to={`/offer/${ id }`}>\n          <img\n            className=\"place-card__image\"\n            src={previewImage}\n            width=\"260\"\n            height=\"200\"\n            alt=\"Place\"\n          />\n        </Link>\n      </div>\n      <CardInfo\n        id={id}\n        price={price}\n        title={title}\n        isFavorite={isFavorite}\n        type={type}\n        width={width}\n        onFavoriteClick={onFavoriteClick}\n      />\n    </article>\n  );\n}\n\nPlaceNearPlace.propTypes = {\n  id: PropTypes.number.isRequired,\n  price: PropTypes.number,\n  rating: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  isPremium: PropTypes.bool,\n  isFavorite: PropTypes.bool.isRequired,\n  type: PropTypes.string,\n  previewImage: PropTypes.string,\n};\n\nexport default PlaceNearPlace;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Util from '../../util/util';\nimport PlaceNearPlace from './place-near-place';\n\nfunction PlaceNearPlaceList(props) {\n  const {nearbyPlaces, commonPlaces} = props;\n\n  const commonPlacesLinksGottenByNearbyPlaces = Util.getNearbyPlacesFromCommonPlaces(nearbyPlaces, commonPlaces);\n\n  return (\n    <div className=\"near-places__list places__list\">\n      {commonPlacesLinksGottenByNearbyPlaces.map((place) => (\n        <PlaceNearPlace\n          key={place.id}\n          id={place.id}\n          price={place.price}\n          title={place.title}\n          isPremium={place.isPremium}\n          isFavorite={place.isFavorite}\n          type={place.type}\n          previewImage={place.previewImage}\n        />\n      ))}\n    </div>\n  );\n}\n\nPlaceNearPlaceList.propTypes = {\n  nearbyPlaces: PropTypes.array,\n  commonPlaces: PropTypes.array,\n};\n\nexport default PlaceNearPlaceList;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p>Loading...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import {NameSpace} from '../root-reducer';\n\nexport const getComments = (state) => state[NameSpace.COMMENTS].comments;\nexport const getIsCommentsLoaded = (state) => state[NameSpace.COMMENTS].isCommentsLoaded;\n","import React, {useEffect, Fragment} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Link, useParams, useHistory} from 'react-router-dom';\n\nimport PlaceCommentForm from './place-comment-form';\nimport PlaceCommentList from './place-comment-list';\nimport PlaceFavoriteButton from './place-favorite-button';\nimport withLayout from '../hocs/with-layout';\nimport PlaceImageList from './place-images-list';\nimport PlaceGoodList from './place-goods-list';\nimport PlaceNearPlaceList from './place-near-place-list';\nimport LoadingScreen from '../loading-screen/loading-screen';\n\nimport {\n  fetchCommentsList,\n  fetchNearbyPlacesList,\n  addToFavorite\n} from '../../store/api-actions';\n\nimport {removeNearbyPlaces} from '../../store/actions';\nimport {removeComments} from '../../store/actions';\nimport {AuthorizationStatus, AppRoute} from '../../const';\nimport Util from '../../util/util';\nimport Map from '../map/map';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\nimport {getComments, getIsCommentsLoaded} from '../../store/comments/selectors';\n\nimport {\n  getPlaces,\n  getIsNearbyPlacesLoaded,\n  getNearbyPlaces\n} from '../../store/places/selectors';\n\n\nfunction Place(props) {\n  const {id} = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const places = useSelector(getPlaces);\n  const isNearbyPlacesLoaded = useSelector(getIsNearbyPlacesLoaded);\n  const nearbyPlaces = useSelector(getNearbyPlaces);\n  const comments = useSelector(getComments);\n  const isCommentsLoaded = useSelector(getIsCommentsLoaded);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const place = places.find((placeItem) => placeItem.id === +id);\n  const nearbyPlacesWithCurrentPlace = [...nearbyPlaces, place];\n\n  const width = Util.getWidthByRating(place.rating);\n\n  useEffect(() => {\n    dispatch(fetchCommentsList(id));\n    dispatch(fetchNearbyPlacesList(id));\n\n    return () => {\n      dispatch(removeNearbyPlaces());\n      dispatch(removeComments());\n    };\n  }, [id, dispatch]);\n\n  const onClick = (evt) => {\n    evt.preventDefault();\n    if (authorizationStatus === AuthorizationStatus.NO_AUTH) {\n      history.push(AppRoute.SIGN_IN);\n    } else {\n      dispatch(addToFavorite(place.id, !place.isFavorite));\n    }\n  };\n\n  return (\n    <Fragment>\n      <main className=\"page__main\">\n        <section className=\"property\">\n          <PlaceImageList images={place.images}/>\n          <div className=\"property__container container\">\n            <div className=\"property__wrapper\">\n              {place.isPremium && (\n                <div className=\"property__mark\">\n                  <span>Premium</span>\n                </div>)}\n              <div className=\"property__name-wrapper\">\n                <h1 className=\"property__name\">\n                  {place.description}\n                </h1>\n                <PlaceFavoriteButton place={place} onClick={onClick} />\n              </div>\n              <div className=\"property__rating rating\">\n                <div className=\"property__stars rating__stars\">\n                  <span style={{width: `${ width }%`}} />\n                  <span className=\"visually-hidden\">Rating</span>\n                </div>\n                <span className=\"property__rating-value rating__value\">{Math.round(place.rating)}</span>\n              </div>\n              <ul className=\"property__features\">\n                <li className=\"property__feature property__feature--entire\">\n                  {place.type}\n                </li>\n                <li className=\"property__feature property__feature--bedrooms\">\n                  {place.bedrooms} Bedrooms\n                </li>\n                <li className=\"property__feature property__feature--adults\">\n                  Max {place.maxAdults} adults\n                </li>\n              </ul>\n              <div className=\"property__price\">\n                <b className=\"property__price-value\">€{place.price}</b>\n                <span className=\"property__price-text\">&nbsp;night</span>\n              </div>\n              <div className=\"property__inside\">\n                <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n                <PlaceGoodList goods={place.goods}/>\n              </div>\n              <div className=\"property__host\">\n                <h2 className=\"property__host-title\">Meet the host</h2>\n                <div className=\"property__host-user user\">\n                  <div className={`property__avatar-wrapper ${ place.host.isPro && 'property__avatar-wrapper--pro' } user__avatar-wrapper`}>\n                    <img\n                      className=\"property__avatar user__avatar\"\n                      src={place.host.avatarUrl}\n                      width={74}\n                      height={74}\n                      alt=\"Host avatar\"\n                    />\n                  </div>\n                  <span className=\"property__user-name\">\n                    {place.host.name}\n                  </span>\n                  {place.host.isPro && (\n                    <span className=\"property__user-status\">\n                      Pro\n                    </span>\n                  )}\n                </div>\n                <div className=\"property__description\">\n                  <p className=\"property__text\">\n                    {place.description}\n                  </p>\n                </div>\n              </div>\n              <section className=\"property__reviews reviews\">\n                {isCommentsLoaded\n                  ?\n                  <Fragment>\n                    <h2 className=\"reviews__title\">Reviews · <span className=\"reviews__amount\">{comments.length}</span></h2>\n                    <PlaceCommentList reviews={comments}/>\n                  </Fragment>\n                  : <LoadingScreen />}\n                {authorizationStatus === AuthorizationStatus.AUTH && < PlaceCommentForm />}\n              </section>\n            </div>\n          </div>\n          <section className=\"property__map map\">\n            <Map\n              activeCityName={place.city.name}\n              city={place.city}\n              points={nearbyPlacesWithCurrentPlace}\n              selectedPoint={place}\n            />\n          </section>\n        </section>\n        <div className=\"container\">\n          <section className=\"near-places places\">\n            <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n            {isNearbyPlacesLoaded\n              ? <PlaceNearPlaceList nearbyPlaces={nearbyPlaces} commonPlaces={places} />\n              : <LoadingScreen />}\n          </section>\n        </div>\n      </main>\n      <footer className=\"footer container\">\n        <Link className=\"footer__logo-link\" to=\"/\">\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={64} height={33} />\n        </Link>\n      </footer>\n\n    </Fragment>\n  );\n}\n\nconst withLayoutPlace = withLayout(Place);\n\nexport default withLayoutPlace;\n","import React from 'react';\nimport withLayout from '../hocs/with-layout';\n\nfunction NotFound() {\n  return (\n    <div style={{margin: 'auto', width: '200px'}}>\n      <h1 style={{textAlign: 'center'}}>404</h1>\n      <h2>Page Not Found</h2>\n    </div>\n  );\n}\n\nconst withLayoutNotFound = withLayout(NotFound);\nexport default withLayoutNotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction PrivateRoute(props) {\n  const {render, path, exact} = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.AUTH\n          ? render()\n          : <Redirect to={AppRoute.SIGN_IN} />\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Switch, Route, HashRouter as BrowserRouter} from 'react-router-dom';\n\nimport {AppRoute} from '../../const';\nimport Main from '../main/main';\nimport Favorites from '../favorites/favorites';\nimport Login from '../login/login';\nimport Place from '../place/place';\nimport Error from '../not-found/not-found';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport PrivateRoute from '../private-route/private-route';\nimport browserHistory from '../../browser-history';\nimport { getPlaces, getIsDataLoaded} from '../../store/places/selectors';\n\nfunction App() {\n  const places = useSelector(getPlaces);\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.MAIN}>\n          <Main className=\"page page--gray page--index\" />\n        </Route>\n        <Route exact path={AppRoute.SIGN_IN}>\n          <Login />\n        </Route>\n        <PrivateRoute\n          exact\n          path={AppRoute.FAVORITES}\n          render={() => <Favorites places={places} className=\"page\" />}\n        >\n        </PrivateRoute>\n        <Route exact path={AppRoute.ROOM}>\n          <Place className=\"page\" />\n        </Route>\n        <Route>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../actions';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Provider} from 'react-redux';\n\nimport {getAxiosInstance} from './services/api';\nimport App from './components/app/app';\nimport rootReducer from './store/root-reducer';\nimport {fetchPlacesList} from './store/api-actions';\nimport {redirect} from './store/middlewares/redirect';\nimport Util from './util/util';\n\nconst api = getAxiosInstance();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nUtil.getIsTokenExist(store.dispatch);\nstore.dispatch(fetchPlacesList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}